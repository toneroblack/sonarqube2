{"version":3,"sources":["webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css?8738","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css?82fb","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css","webpack:///./src/main/js/app/components/nav/component/Menu.css?14a8","webpack:///./src/main/js/app/components/nav/component/Menu.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css?f7cf","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css?4563","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css?e00c","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavProjectBindingErrorNotif.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLike.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItemList.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLikeMergeInformation.tsx","webpack:///./src/main/js/app/components/nav/component/Breadcrumb.tsx","webpack:///./src/main/js/app/components/nav/component/Header.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.tsx","webpack:///./src/main/js/app/components/nav/component/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/utils.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeButton.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeParams.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/ProjectBadges.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawerPage.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationPages.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/DrawerLink.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaKey.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLinks.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityGate.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaSize.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTags.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationRenderer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/components/tags/TagsList.css?d861","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/components/common/DocumentationTooltip.tsx","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/shared/DrilldownLink.tsx","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/components/common/CodeSnippet.css?463c","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/api/projectLinks.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLink.tsx","webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/api/notifications.ts"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","ComponentContainerNotFound","defaultTitle","defer","className","id","to","mounted","state","loading","fetchIsValidLicense","this","setState","then","isValidLicense","currentTask","props","errorType","Alert","display","variant","componentQualifier","Project","errorMessage","appState","canAdmin","withAppState","messageKey","status","branch","component","location","backgroundTaskUrl","key","canSeeBackgroundTasks","configuration","showBackgroundTasks","isOnBackgroundTaskPage","pathname","type","url","stacktrace","defaultMessage","values","currentTaskOnSameBranch","isInProgress","isPending","renderMessage","ALL","Failed","pullRequest","pullRequestTitle","message","undefined","withRouter","action","showSettings","branchesEnabled","currentBranchLike","hasManyBranches","projectBinding","displayName","isApplication","qualifier","Application","canAdminComponent","isGitLab","alm","GitLab","BranchLikeIcon","branchLike","title","plusIcon","fill","blue","size","overlay","DocumentationTooltip","links","href","label","inPlace","additionalIcon","indent","setSelectedNode","onSelect","selected","active","onClick","ref","BranchStatus","listNode","selectedNode","parent","smooth","branchLikeTree","hasResults","selectedBranchLike","renderItem","node","mainBranchTree","branchTree","filter","map","tree","pullRequests","length","pr","parentlessPullRequests","orphanPullRequests","super","processBranchLikes","branchLikes","branchLikesToDisplay","reduce","prev","t","branchLikesToDisplayTree","openHighlightedBranchLike","handleOnSelect","highlightSiblingBranchlike","indexDelta","selectBranchLikeIndex","findIndex","b","newIndex","handleKeyDown","event","keyCode","Enter","preventDefault","UpArrow","DownArrow","handleSearchChange","query","q","toLowerCase","filteredBranchLikes","bl","filterBranch","name","includes","onClose","router","some","showManageLink","Dropdown","noPadding","autoFocus","onChange","onKeyDown","placeholder","value","isMenuOpen","setIsMenuOpen","isMenuEnabled","currentBranchLikeElement","Boolean","dropdown","onRequestClose","open","target","Breadcrumb","breadcrumbs","lastBreadcrumbElement","isNoMainBranch","breadcrumbElement","isFirst","isNotLast","currentUser","Favorite","favorite","isFavorite","AnalysisWarningsModal","lazyLoadComponent","modal","handleClick","currentTarget","blur","handleCloseModal","warnings","warningsCount","componentKey","onWarningDismiss","isABranch","currentPage","isMain","Portfolio","SubPortfolio","getCurrentPage","displayVersion","version","analysisDate","date","HomePageSelect","rel","SETTINGS_URLS","MenuLink","hasAnalysis","isProject","isDeveloper","Developper","isPortfolio","getConfiguration","getQuery","renderDashboardLink","activeClassName","renderCodeLink","renderActivityLink","renderIssuesLink","resolved","renderComponentMeasuresLink","renderSecurityHotspotsLink","renderSecurityReports","extensions","extension","startsWith","renderAdministration","isSettingsActive","window","indexOf","adminLinks","renderAdministrationLinks","link","tagName","onToggleClick","role","renderSettingsLink","renderBranchesLink","renderBaselineLink","renderConsoleAppLink","renderAdminExtensions","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderDeletionLink","renderProjectInformationButton","e","onToggleProjectInfo","tabIndex","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showUpdateKey","renderExtension","isAdmin","baseQuery","renderExtensions","withoutSecurityExtension","children","displayed","top","style","onKeydown","onClickOutside","BadgeType","getBadgeSnippet","getBadgeUrl","format","metric","project","projectUrl","marketing","measure","qualityGate","mdImage","color","width","alt","src","badgeMetrics","getColorOptions","getFormatOptions","getMetricOptions","metrics","handleColorChange","updateOptions","handleFormatChange","handleMetricChange","renderBadgeType","htmlFor","clearable","searchable","menuStyle","maxHeight","fetchBadgeMetrics","webservices","domain","find","d","path","ws","actions","w","param","params","p","possibleValues","selectedType","badgeOptions","alert_status","handleSelectBadge","handleUpdateOptions","fullBadgeOptions","CodeSnippet","isOneLine","snippet","InfoDrawerPage","onPageChange","ProjectInformationPages","withNotifications","channels","notifications","perProjectTypes","projectNotifications","n","channel","NotificationsList","checkboxId","onAdd","addNotification","onRemove","removeNotification","types","MetaKey","readOnly","copyValue","loadLinks","prevProps","orderedLinks","MetaLink","MetaQualityGate","isDefault","deprecatedByKey","loadDeprecatedRules","existingProfiles","profiles","deleted","requests","profile","loadDeprecatedRulesForProfile","Promise","all","responses","forEach","count","profileKey","data","activation","ps","qprofile","statuses","r","total","languageFromStore","languages","language","languageName","inner","tooltip","getDeprecatedRulesCount","headerClassName","renderProfile","MetaSize","measures","isApp","ncloc","projects","DrilldownLink","Number","searchResult","onSearch","Math","min","selectedTags","tags","tag","setProjectTags","onUnselect","availableTags","TagsSelector","listSize","canUpdateTags","getPopupPos","eltPos","containerPos","height","right","setTags","application","join","handleSetProjectTags","onComponentChange","card","closeOnClick","closeOnClickOutside","overlayPlacement","BottomLeft","innerRef","tagsList","stopPropagation","TagsList","allowUpdate","canConfigureNotifications","canUseBadges","visibility","PrivacyBadgeContainer","description","qualityProfiles","badges","page","main","setPage","loadMeasures","metricKeys","fetchMetrics","mapDispatchToProps","ComponentNav","projectBindingErrors","contextNavHeightRaw","globalNavHeightRaw","displayProjectInfo","setDisplayProjectInfo","RecentHistory","add","bgTaskNotifComponent","prDecoNotifComponent","contextNavHeight","notif","fetchComponent","async","componentWithQualifier","nav","addQualifier","Forbidden","requireAuthorization","match","replace","fetchBranches","catch","fetchStatus","fetchWarnings","fetchProjectBindingErrors","breadcrumb","branches","resolve","getCurrentBranchLike","registerBranchStatuses","current","queue","shouldFetchComponent","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","InProgress","currentTaskChanged","progressChanged","clearTimeout","watchStatusTimer","setTimeout","Pending","isSameBranch","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","handleWarningDismiss","needIssueSync","PageUnavailableDueToIndexation","File","TestFile","ComponentContext","Provider","onBranchesChange","noCopy","snippetRef","finalSnippet","Array","isArray","line","MultiSelectOption","custom","disabled","element","onHover","renderLabel","onFocus","onMouseOver","checked","onCheck","onSelectChange","handleSelectChange","item","onSelectItem","onUnselectItem","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","handleKeyboard","evt","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","selectedElements","elements","updateSelectedElements","filterSelected","updateUnselectedElements","unselectedElements","slice","setElementActive","idx","allElements","container","addEventListener","nextProps","totalElements","searchInput","focus","removeEventListener","allowSelection","allowNewElements","footerNode","activeElement","showNewElement","infiniteList","listClasses","div","defaultProps","validateTag","getAlmDefinitions","getAlmSettings","getAlmSettingsNoCatch","almSettings","validateAlmSettings","response","BadRequest","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketServerConfiguration","updateBitbucketServerConfiguration","createBitbucketCloudConfiguration","updateBitbucketCloudConfiguration","createGitlabConfiguration","updateGitlabConfiguration","deleteConfiguration","countBindedProjects","almSetting","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectBitbucketCloudBinding","setProjectGithubBinding","setProjectGitlabBinding","validateProjectAlmBinding","projectKey","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","STATUSES","ALL_EXCEPT_PENDING","ALL_TYPES","CURRENTS","ONLY_CURRENTS","DEFAULT_FILTERS","taskType","currents","minSubmittedAt","maxExecutedAt","DEBOUNCE_DELAY","PROVIDED_TYPES","isProvided","orderLinks","provided","unknown","getLinkName","getBranches","getPullRequests","deleteBranch","deletePullRequest","renameBranch","excludeBranchFromPurge","branchName","excluded","DEFAULT_HOMEPAGE","setHomePage","handleReset","homepage","isChecked","isSameHomePage","filled","a","ISSUE_MEASURES","issueParamsPerMetric","blocker_violations","severities","new_blocker_violations","critical_violations","new_critical_violations","major_violations","new_major_violations","minor_violations","new_minor_violations","info_violations","new_info_violations","open_issues","reopened_issues","confirmed_issues","false_positive_issues","resolutions","code_smells","new_code_smells","bugs","new_bugs","vulnerabilities","new_vulnerabilities","isIssueMeasure","propsToIssueParams","sinceLeakPeriod","listView","test","addFavorite","removeFavorite","toggleFavorite","newFavorite","handleFavorite","_prevProps","level","small","fetchWebApi","showInternal","include_internals","webServices","fetchResponseExample","controller","notification","dispatcher","globalMessageKey","projectMessageKey","getDispatcherLabel","isEnabled","handleCheck","getProjectLinks","deleteLink","linkId","createLink","expanded","handleCollapse","handleSelect","select","iconOnly","linkTitle","isValid","WrappedComponent","Wrapper","globalTypes","fetchNotifications","throwGlobalError","addNotificationToState","added","areNotificationsEqual","removeNotificationFromState","removed"],"mappings":"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","file":"js/277.m.dc9528d4.chunk.js","sourcesContent":["var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".branch-like-navigation-toggler-container .popup{min-width:430px;max-width:650px}.branch-like-navigation-menu .search-box-container{padding:8px}.branch-like-navigation-menu .search-box-container .search-box,.branch-like-navigation-menu .search-box-container .search-box-input{max-width:none!important}.branch-like-navigation-menu .item-list{padding-bottom:8px;max-height:300px;overflow-y:auto}.branch-like-navigation-menu .item{padding:4px 8px}.branch-like-navigation-menu .item.header{color:#666}.branch-like-navigation-menu .item:not(.header).active,.branch-like-navigation-menu .item:not(.header):hover{background-color:#f3f3f3;cursor:pointer}.branch-like-navigation-menu .hint-container{padding:8px;background-color:#f3f3f3;border-top:1px solid #e6e6e6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".header-meta-warnings .alert{margin-bottom:0}.header-meta-warnings .alert-content{padding:6px 8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-tabs>li>a.menu-button{color:#236a97}.navbar-tabs>li>a.menu-button:hover{color:#4b9fd5;border-bottom-color:transparent}.navbar-tabs>li>a.disabled-link,.navbar-tabs>li>a.disabled-link:hover{color:#b4b4b4;cursor:default;border-bottom-color:transparent}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-inner-with-notif .info-drawer{border-top:1px solid #e6e6e6}.info-drawer-pane{background-color:#fff;right:-380px;width:380px;transition:right .3s ease-in-out;border-left:1px solid #e6e6e6;box-sizing:border-box}.info-drawer-pane.open{right:0}.info-drawer{position:fixed;bottom:0;z-index:51}.info-drawer .close-button{position:absolute;top:0;right:0;background:#fff;padding:16px;z-index:2}.info-drawer .back-button{cursor:pointer}.info-drawer .back-button:hover{color:#4b9fd5}.info-drawer-page{position:absolute;top:0;bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".badges-list{display:flex;justify-content:space-around;justify-content:space-evenly;flex-wrap:nowrap}.button.badge-button{display:flex;justify-content:center;padding:8px;min-width:146px;height:116px;background-color:#f3f3f3;border:1px solid #e6e6e6;border-radius:3px;transition:all .3s ease}.button.badge-button:active,.button.badge-button:focus,.button.badge-button:hover{background-color:#f3f3f3;border-color:#4b9fd5;box-shadow:none}.button.badge-button.selected{background-color:#cae3f2;border-color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".project-info-list>li{padding-left:1px;padding-bottom:4px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-info-tags{position:relative}.project-info-deleted-profile,.project-info-deprecated-rules{margin:4px -6px;padding:3px 6px!important;border:1px solid #f4b1b0;border-radius:3px;background-color:#f2dede}.project-info-deleted-profile a,.project-info-deprecated-rules a{color:#0e516f;border-color:darken(#cae3f2)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task } from '../../../../types/tasks';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translateWithParameters(\n            'component_navigation.status.last_blocked_due_to_bad_license_X',\n            translate('qualifier', currentTask.componentQualifier || ComponentQualifier.Project)\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link, WithRouterProps } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { withRouter } from '../../../../components/hoc/withRouter';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport { Task, TaskStatuses } from '../../../../types/tasks';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component, currentTask, location } = this.props;\n    const backgroundTaskUrl = getComponentBackgroundTaskUrl(component.key, status);\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n    const isOnBackgroundTaskPage = location.pathname === backgroundTaskUrl.pathname;\n\n    let type;\n    if (currentTask && hasMessage('background_task.type', currentTask.type)) {\n      messageKey += '_X';\n      type = translate('background_task.type', currentTask.type);\n    }\n\n    let url;\n    let stacktrace;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n\n      if (isOnBackgroundTaskPage) {\n        messageKey += '.help';\n        stacktrace = translate('background_tasks.show_stacktrace');\n      } else {\n        messageKey += '.link';\n        url = <Link to={backgroundTaskUrl}>{translate('background_tasks.page')}</Link>;\n      }\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url, stacktrace, type }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === TaskStatuses.Failed) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert className=\"null-spacer-bottom\" display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n\nexport default withRouter(ComponentNavBgTaskNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { PULL_REQUEST_DECORATION_BINDING_CATEGORY } from '../../../../apps/settings/components/AdditionalCategoryKeys';\nimport { getProjectSettingsUrl } from '../../../../helpers/urls';\n\nexport interface ComponentNavProjectBindingErrorNotifProps {\n  component: T.Component;\n}\n\nexport function ComponentNavProjectBindingErrorNotif(\n  props: ComponentNavProjectBindingErrorNotifProps\n) {\n  const { component } = props;\n  let action;\n\n  if (component.configuration?.showSettings) {\n    action = (\n      <Link to={getProjectSettingsUrl(component.key, PULL_REQUEST_DECORATION_BINDING_CATEGORY)}>\n        {translate('component_navigation.pr_deco.action.check_project_settings')}\n      </Link>\n    );\n  } else {\n    action = translate('component_navigation.pr_deco.action.contact_project_admin');\n  }\n\n  return (\n    <Alert display=\"banner\" variant=\"warning\">\n      <FormattedMessage\n        defaultMessage={translate('component_navigation.pr_deco.error_detected_X')}\n        id=\"component_navigation.pr_deco.error_detected_X\"\n        values={{ action }}\n      />\n    </Alert>\n  );\n}\n\nexport default ComponentNavProjectBindingErrorNotif;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DocumentationTooltip from '../../../../../components/common/DocumentationTooltip';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName } from '../../../../../helpers/branch-like';\nimport { getApplicationAdminUrl } from '../../../../../helpers/urls';\nimport { AlmKeys, ProjectAlmBindingResponse } from '../../../../../types/alm-settings';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { colors } from '../../../../theme';\n\nexport interface CurrentBranchLikeProps {\n  branchesEnabled: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  hasManyBranches: boolean;\n  projectBinding?: ProjectAlmBindingResponse;\n}\n\nexport function CurrentBranchLike(props: CurrentBranchLikeProps) {\n  const {\n    branchesEnabled,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    hasManyBranches,\n    projectBinding\n  } = props;\n\n  const displayName = getBranchLikeDisplayName(currentBranchLike);\n  const isApplication = component.qualifier === ComponentQualifier.Application;\n  const canAdminComponent = configuration && configuration.showSettings;\n  const isGitLab = projectBinding !== undefined && projectBinding.alm === AlmKeys.GitLab;\n\n  const additionalIcon = () => {\n    const plusIcon = <PlusCircleIcon fill={colors.blue} size={12} />;\n\n    if (branchesEnabled && hasManyBranches) {\n      return <DropdownIcon />;\n    }\n\n    if (isApplication) {\n      if (!hasManyBranches && canAdminComponent) {\n        return (\n          <HelpTooltip\n            overlay={\n              <>\n                <p>{translate('application.branches.help')}</p>\n                <hr className=\"spacer-top spacer-bottom\" />\n                <Link to={getApplicationAdminUrl(component.key)}>\n                  {translate('application.branches.link')}\n                </Link>\n              </>\n            }>\n            {plusIcon}\n          </HelpTooltip>\n        );\n      }\n    } else {\n      if (!branchesEnabled) {\n        return (\n          <DocumentationTooltip\n            content={\n              projectBinding !== undefined\n                ? translateWithParameters(\n                    `branch_like_navigation.no_branch_support.content_x.${isGitLab ? 'mr' : 'pr'}`,\n                    translate('alm', projectBinding.alm)\n                  )\n                : translate('branch_like_navigation.no_branch_support.content')\n            }\n            data-test=\"branches-support-disabled\"\n            links={[\n              {\n                href: 'https://redirect.sonarsource.com/editions/developer.html',\n                label: translate('learn_more')\n              }\n            ]}\n            title={\n              projectBinding !== undefined\n                ? translate(\n                    'branch_like_navigation.no_branch_support.title',\n                    isGitLab ? 'mr' : 'pr'\n                  )\n                : translate('branch_like_navigation.no_branch_support.title')\n            }>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n\n      if (!hasManyBranches) {\n        return (\n          <DocumentationTooltip\n            content={translate('branch_like_navigation.only_one_branch.content')}\n            data-test=\"only-one-branch-like\"\n            links={[\n              {\n                href: '/documentation/branches/overview/',\n                label: translate('branch_like_navigation.only_one_branch.documentation')\n              },\n              {\n                href: '/documentation/analysis/pull-request/',\n                label: translate('branch_like_navigation.only_one_branch.pr_analysis')\n              },\n              {\n                href: `/tutorials?id=${component.key}`,\n                label: translate('branch_like_navigation.tutorial_for_ci'),\n                inPlace: true\n              }\n            ]}\n            title={translate('branch_like_navigation.only_one_branch.title')}>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <span className=\"display-flex-center flex-shrink text-ellipsis\">\n      <BranchLikeIcon branchLike={currentBranchLike} />\n      <span\n        className=\"spacer-left spacer-right flex-shrink text-ellipsis js-branch-like-name\"\n        title={displayName}>\n        {displayName}\n      </span>\n      {additionalIcon()}\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLike);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../../components/common/BranchStatus';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName, isMainBranch } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface MenuItemProps {\n  branchLike: BranchLike;\n  component: T.Component;\n  indent?: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n  setSelectedNode?: (node: HTMLLIElement) => void;\n}\n\nexport function MenuItem(props: MenuItemProps) {\n  const { branchLike, component, indent, setSelectedNode, onSelect, selected } = props;\n  const displayName = getBranchLikeDisplayName(branchLike);\n\n  return (\n    <li\n      className={classNames('item', {\n        active: selected\n      })}\n      onClick={() => onSelect(branchLike)}\n      ref={selected ? setSelectedNode : undefined}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between', {\n          'big-spacer-left': indent\n        })}>\n        <div className=\"item-name text-ellipsis\" title={displayName}>\n          <BranchLikeIcon branchLike={branchLike} />\n          <span className=\"spacer-left\">{displayName}</span>\n          {isMainBranch(branchLike) && (\n            <span className=\"badge spacer-left\">{translate('branches.main_branch')}</span>\n          )}\n        </div>\n        <div className=\"spacer-left\">\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default React.memo(MenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getBranchLikeKey, isSameBranchLike } from '../../../../../helpers/branch-like';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport MenuItem from './MenuItem';\n\nexport interface MenuItemListProps {\n  branchLikeTree: BranchLikeTree;\n  component: T.Component;\n  hasResults: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport function MenuItemList(props: MenuItemListProps) {\n  let listNode: HTMLUListElement | null = null;\n  let selectedNode: HTMLLIElement | null = null;\n\n  React.useEffect(() => {\n    if (listNode && selectedNode) {\n      scrollToElement(selectedNode, { parent: listNode, smooth: false });\n    }\n  });\n\n  const { branchLikeTree, component, hasResults, onSelect, selectedBranchLike } = props;\n\n  const renderItem = (branchLike: BranchLike, indent?: boolean) => (\n    <MenuItem\n      branchLike={branchLike}\n      component={component}\n      indent={indent}\n      key={getBranchLikeKey(branchLike)}\n      onSelect={onSelect}\n      selected={isSameBranchLike(branchLike, selectedBranchLike)}\n      setSelectedNode={node => (selectedNode = node)}\n    />\n  );\n\n  return (\n    <ul className=\"item-list\" ref={node => (listNode = node)}>\n      {!hasResults && (\n        <li className=\"item\">\n          <span className=\"note\">{translate('no_results')}</span>\n        </li>\n      )}\n\n      {/* BRANCHES & PR */}\n      {[branchLikeTree.mainBranchTree, ...branchLikeTree.branchTree].filter(isDefined).map(tree => (\n        <React.Fragment key={getBranchLikeKey(tree.branch)}>\n          {renderItem(tree.branch)}\n          {tree.pullRequests.length > 0 && (\n            <>\n              <li className=\"item header\">\n                <span className=\"big-spacer-left\">\n                  {translate('branch_like_navigation.pull_requests')}\n                </span>\n              </li>\n              {tree.pullRequests.map(pr => renderItem(pr, true))}\n            </>\n          )}\n          <hr />\n        </React.Fragment>\n      ))}\n\n      {/* PARENTLESS PR (for display during search) */}\n      {branchLikeTree.parentlessPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">{translate('branch_like_navigation.pull_requests')}</li>\n          {branchLikeTree.parentlessPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n\n      {/* ORPHAN PR */}\n      {branchLikeTree.orphanPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">\n            {translate('branch_like_navigation.orphan_pull_requests')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('branch_like_navigation.orphan_pull_requests.tooltip')}\n            />\n          </li>\n          {branchLikeTree.orphanPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n    </ul>\n  );\n}\n\nexport default React.memo(MenuItemList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { KeyCodes } from 'sonar-ui-common/helpers/keycodes';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../../../components/hoc/withRouter';\nimport {\n  getBrancheLikesAsTree,\n  isBranch,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../../../helpers/branch-like';\nimport { getBranchLikeUrl } from '../../../../../helpers/urls';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport MenuItemList from './MenuItemList';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdminComponent?: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  branchLikesToDisplay: BranchLike[];\n  branchLikesToDisplayTree: BranchLikeTree;\n  query: string;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport class Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let selectedBranchLike = undefined;\n\n    if (props.branchLikes.some(b => isSameBranchLike(b, props.currentBranchLike))) {\n      selectedBranchLike = props.currentBranchLike;\n    } else if (props.branchLikes.length > 0) {\n      selectedBranchLike = props.branchLikes[0];\n    }\n\n    this.state = {\n      query: '',\n      selectedBranchLike,\n      ...this.processBranchLikes(props.branchLikes)\n    };\n  }\n\n  processBranchLikes = (branchLikes: BranchLike[]) => {\n    const tree = getBrancheLikesAsTree(branchLikes);\n    return {\n      branchLikesToDisplay: [\n        ...(tree.mainBranchTree\n          ? [tree.mainBranchTree.branch, ...tree.mainBranchTree.pullRequests]\n          : []),\n        ...tree.branchTree.reduce((prev, t) => [...prev, t.branch, ...t.pullRequests], []),\n        ...tree.parentlessPullRequests,\n        ...tree.orphanPullRequests\n      ],\n      branchLikesToDisplayTree: tree\n    };\n  };\n\n  openHighlightedBranchLike = () => {\n    if (this.state.selectedBranchLike) {\n      this.handleOnSelect(this.state.selectedBranchLike);\n    }\n  };\n\n  highlightSiblingBranchlike = (indexDelta: number) => {\n    const selectBranchLikeIndex = this.state.branchLikesToDisplay.findIndex(b =>\n      isSameBranchLike(b, this.state.selectedBranchLike)\n    );\n    const newIndex = selectBranchLikeIndex + indexDelta;\n\n    if (\n      selectBranchLikeIndex !== -1 &&\n      newIndex >= 0 &&\n      newIndex < this.state.branchLikesToDisplay.length\n    ) {\n      this.setState(({ branchLikesToDisplay }) => ({\n        selectedBranchLike: branchLikesToDisplay[newIndex]\n      }));\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.preventDefault();\n        this.openHighlightedBranchLike();\n        break;\n      case KeyCodes.UpArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(-1);\n        break;\n      case KeyCodes.DownArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(+1);\n        break;\n    }\n  };\n\n  handleSearchChange = (query: string) => {\n    const q = query.toLowerCase();\n\n    const filterBranch = (branch: BranchLike) =>\n      isBranch(branch) && branch.name.toLowerCase().includes(q);\n    const filterPullRequest = (pr: BranchLike) =>\n      isPullRequest(pr) && (pr.title.toLowerCase().includes(q) || pr.key.toLowerCase().includes(q));\n\n    const filteredBranchLikes = this.props.branchLikes.filter(\n      bl => filterBranch(bl) || filterPullRequest(bl)\n    );\n\n    this.setState({\n      query: q,\n      selectedBranchLike: filteredBranchLikes.length > 0 ? filteredBranchLikes[0] : undefined,\n      ...this.processBranchLikes(filteredBranchLikes)\n    });\n  };\n\n  handleOnSelect = (branchLike: BranchLike) => {\n    this.setState({ selectedBranchLike: branchLike }, () => {\n      this.props.onClose();\n      this.props.router.push(getBranchLikeUrl(this.props.component.key, branchLike));\n    });\n  };\n\n  render() {\n    const { canAdminComponent, component, onClose } = this.props;\n    const {\n      branchLikesToDisplay,\n      branchLikesToDisplayTree,\n      query,\n      selectedBranchLike\n    } = this.state;\n\n    const showManageLink = component.qualifier === ComponentQualifier.Project && canAdminComponent;\n    const hasResults = branchLikesToDisplay.length > 0;\n\n    return (\n      <DropdownOverlay className=\"branch-like-navigation-menu\" noPadding={true}>\n        <div className=\"search-box-container\">\n          <SearchBox\n            autoFocus={true}\n            onChange={this.handleSearchChange}\n            onKeyDown={this.handleKeyDown}\n            placeholder={translate('branch_like_navigation.search_for_branch_like')}\n            value={query}\n          />\n        </div>\n\n        <div className=\"item-list-container\">\n          <MenuItemList\n            branchLikeTree={branchLikesToDisplayTree}\n            component={component}\n            hasResults={hasResults}\n            onSelect={this.handleOnSelect}\n            selectedBranchLike={selectedBranchLike}\n          />\n        </div>\n\n        {showManageLink && (\n          <div className=\"hint-container text-right\">\n            <Link\n              onClick={() => onClose()}\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branch_like_navigation.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Toggler from 'sonar-ui-common/components/controls/Toggler';\nimport { withAppState } from '../../../../../components/hoc/withAppState';\nimport { ProjectAlmBindingResponse } from '../../../../../types/alm-settings';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport './BranchLikeNavigation.css';\nimport CurrentBranchLike from './CurrentBranchLike';\nimport Menu from './Menu';\n\nexport interface BranchLikeNavigationProps {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  projectBinding?: ProjectAlmBindingResponse;\n}\n\nexport function BranchLikeNavigation(props: BranchLikeNavigationProps) {\n  const {\n    appState: { branchesEnabled },\n    branchLikes,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    projectBinding\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const canAdminComponent = configuration && configuration.showSettings;\n  const hasManyBranches = branchLikes.length >= 2;\n  const isMenuEnabled = branchesEnabled && hasManyBranches;\n\n  const currentBranchLikeElement = (\n    <CurrentBranchLike\n      branchesEnabled={Boolean(branchesEnabled)}\n      component={component}\n      currentBranchLike={currentBranchLike}\n      hasManyBranches={hasManyBranches}\n      projectBinding={projectBinding}\n    />\n  );\n\n  return (\n    <span\n      className={classNames('big-spacer-left flex-0 branch-like-navigation-toggler-container', {\n        dropdown: isMenuEnabled\n      })}>\n      {isMenuEnabled ? (\n        <Toggler\n          onRequestClose={() => setIsMenuOpen(false)}\n          open={isMenuOpen}\n          overlay={\n            <Menu\n              branchLikes={branchLikes}\n              canAdminComponent={canAdminComponent}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              onClose={() => setIsMenuOpen(false)}\n            />\n          }>\n          <a\n            className=\"link-base-color link-no-underline\"\n            href=\"#\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {currentBranchLikeElement}\n          </a>\n        </Toggler>\n      ) : (\n        currentBranchLikeElement\n      )}\n    </span>\n  );\n}\n\nexport default withAppState(React.memo(BranchLikeNavigation));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPullRequest } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface CurrentBranchLikeMergeInformationProps {\n  currentBranchLike: BranchLike;\n}\n\nexport function CurrentBranchLikeMergeInformation(props: CurrentBranchLikeMergeInformationProps) {\n  const { currentBranchLike } = props;\n\n  if (!isPullRequest(currentBranchLike)) {\n    return null;\n  }\n\n  return (\n    <span className=\"big-spacer-left flex-shrink note text-ellipsis\">\n      <FormattedMessage\n        defaultMessage={translate('branch_like_navigation.for_merge_into_x_from_y')}\n        id=\"branch_like_navigation.for_merge_into_x_from_y\"\n        values={{\n          target: <strong>{currentBranchLike.target}</strong>,\n          branch: <strong>{currentBranchLike.branch}</strong>\n        }}\n      />\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLikeMergeInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { last } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { isMainBranch } from '../../../../helpers/branch-like';\nimport { getComponentOverviewUrl } from '../../../../helpers/urls';\nimport { BranchLike } from '../../../../types/branch-like';\n\ninterface Props {\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n}\n\nexport function Breadcrumb(props: Props) {\n  const {\n    component: { breadcrumbs },\n    currentBranchLike\n  } = props;\n  const lastBreadcrumbElement = last(breadcrumbs);\n  const isNoMainBranch = currentBranchLike && !isMainBranch(currentBranchLike);\n\n  return (\n    <div className=\"big flex-shrink display-flex-center\">\n      {breadcrumbs.map((breadcrumbElement, i) => {\n        const isFirst = i === 0;\n        const isNotLast = i < breadcrumbs.length - 1;\n\n        return (\n          <span className=\"flex-shrink display-flex-center\" key={breadcrumbElement.key}>\n            {isFirst && lastBreadcrumbElement && (\n              <QualifierIcon className=\"spacer-right\" qualifier={lastBreadcrumbElement.qualifier} />\n            )}\n            {isNoMainBranch || isNotLast ? (\n              <Link\n                className=\"link-no-underline text-ellipsis\"\n                title={breadcrumbElement.name}\n                to={getComponentOverviewUrl(breadcrumbElement.key, breadcrumbElement.qualifier)}>\n                {breadcrumbElement.name}\n              </Link>\n            ) : (\n              <span className=\"text-ellipsis\" title={breadcrumbElement.name}>\n                {breadcrumbElement.name}\n              </span>\n            )}\n            {isNotLast && <span className=\"slash-separator\" />}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(Breadcrumb);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport Favorite from '../../../../components/controls/Favorite';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { ProjectAlmBindingResponse } from '../../../../types/alm-settings';\nimport { BranchLike } from '../../../../types/branch-like';\nimport BranchLikeNavigation from './branch-like/BranchLikeNavigation';\nimport CurrentBranchLikeMergeInformation from './branch-like/CurrentBranchLikeMergeInformation';\nimport { Breadcrumb } from './Breadcrumb';\n\nexport interface HeaderProps {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n  currentUser: T.CurrentUser;\n  projectBinding?: ProjectAlmBindingResponse;\n}\n\nexport function Header(props: HeaderProps) {\n  const { branchLikes, component, currentBranchLike, currentUser, projectBinding } = props;\n\n  return (\n    <>\n      <Helmet title={component.name} />\n      <header className=\"display-flex-center flex-shrink\">\n        <Breadcrumb component={component} currentBranchLike={currentBranchLike} />\n        {isLoggedIn(currentUser) && (\n          <Favorite\n            className=\"spacer-left\"\n            component={component.key}\n            favorite={Boolean(component.isFavorite)}\n            qualifier={component.qualifier}\n          />\n        )}\n        {currentBranchLike && (\n          <>\n            <BranchLikeNavigation\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              projectBinding={projectBinding}\n            />\n            <CurrentBranchLikeMergeInformation currentBranchLike={currentBranchLike} />\n          </>\n        )}\n      </header>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(React.memo(Header));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { TaskWarning } from '../../../../types/tasks';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  componentKey: string;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Alert className=\"js-component-analysis-warnings flex-1\" display=\"inline\" variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analysis_had_warnings')}\n            id=\"component_navigation.last_analysis_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  <FormattedMessage\n                    defaultMessage={translate('component_navigation.x_warnings')}\n                    id=\"component_navigation.x_warnings\"\n                    values={{\n                      warningsCount: this.props.warnings.length\n                    }}\n                  />\n                </a>\n              )\n            }}\n          />\n        </Alert>\n        {this.state.modal && (\n          <AnalysisWarningsModal\n            componentKey={this.props.componentKey}\n            onClose={this.handleCloseModal}\n            onWarningDismiss={this.props.onWarningDismiss}\n            warnings={this.props.warnings}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport { isBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { TaskWarning } from '../../../../types/tasks';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport './HeaderMeta.css';\n\nexport interface HeaderMetaProps {\n  branchLike?: BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\nexport function HeaderMeta(props: HeaderMetaProps) {\n  const { branchLike, component, currentUser, warnings } = props;\n\n  const isABranch = isBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && isABranch;\n\n  return (\n    <>\n      <div className=\"display-flex-center flex-0 small\">\n        {warnings.length > 0 && (\n          <span className=\"header-meta-warnings\">\n            <ComponentNavWarnings\n              componentKey={component.key}\n              onWarningDismiss={props.onWarningDismiss}\n              warnings={warnings}\n            />\n          </span>\n        )}\n        {component.analysisDate && (\n          <span className=\"spacer-left nowrap note\">\n            <DateTimeFormatter date={component.analysisDate} />\n          </span>\n        )}\n        {displayVersion && (\n          <span className=\"spacer-left nowrap note\">{`${translate('version')} ${\n            component.version\n          }`}</span>\n        )}\n        {isLoggedIn(currentUser) && currentPage !== undefined && !isPullRequest(branchLike) && (\n          <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n        )}\n      </div>\n      {isPullRequest(branchLike) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n\n  const branch = isBranch(branchLike) && !branchLike.isMain ? branchLike.name : undefined;\n\n  switch (component.qualifier) {\n    case ComponentQualifier.Portfolio:\n    case ComponentQualifier.SubPortfolio:\n      currentPage = { type: 'PORTFOLIO', component: component.key };\n      break;\n    case ComponentQualifier.Application:\n      currentPage = {\n        type: 'APPLICATION',\n        component: component.key,\n        branch\n      };\n      break;\n    case ComponentQualifier.Project:\n      // when home page is set to the default branch of a project, its name is returned as `undefined`\n      currentPage = {\n        type: 'PROJECT',\n        component: component.key,\n        branch\n      };\n      break;\n  }\n\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(HeaderMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link, LinkProps } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport NavBarTabs from 'sonar-ui-common/components/ui/NavBarTabs';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getBranchLikeQuery, isPullRequest } from '../../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioUrl, getProjectQueryUrl } from '../../../../helpers/urls';\nimport { BranchLike, BranchParameters } from '../../../../types/branch-like';\nimport { ComponentQualifier, isPortfolioLike } from '../../../../types/component';\nimport './Menu.css';\n\nconst SETTINGS_URLS = [\n  '/application/console',\n  '/project/admin',\n  '/project/baseline',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: BranchLike | undefined;\n  branchLikes: BranchLike[] | undefined;\n  component: T.Component;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onToggleProjectInfo: () => void;\n}\n\ntype Query = BranchParameters & { id: string };\n\nfunction MenuLink({\n  hasAnalysis,\n  label,\n  ...props\n}: LinkProps & { hasAnalysis: boolean; label: React.ReactNode }) {\n  return hasAnalysis ? (\n    <Link {...props}>{label}</Link>\n  ) : (\n    <Tooltip overlay={translate('layout.must_be_configured')}>\n      <a aria-disabled=\"true\" className=\"disabled-link\">\n        {label}\n      </a>\n    </Tooltip>\n  );\n}\n\nexport class Menu extends React.PureComponent<Props> {\n  hasAnalysis = () => {\n    const { branchLikes = [], component, isInProgress, isPending } = this.props;\n    const hasBranches = branchLikes.length > 1;\n    return hasBranches || isInProgress || isPending || component.analysisDate !== undefined;\n  };\n\n  isProject = () => {\n    return this.props.component.qualifier === ComponentQualifier.Project;\n  };\n\n  isDeveloper = () => {\n    return this.props.component.qualifier === ComponentQualifier.Developper;\n  };\n\n  isPortfolio = () => {\n    const { qualifier } = this.props.component;\n    return isPortfolioLike(qualifier);\n  };\n\n  isApplication = () => {\n    return this.props.component.qualifier === ComponentQualifier.Application;\n  };\n\n  getConfiguration = () => {\n    return this.props.component.configuration || {};\n  };\n\n  getQuery = (): Query => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink = ({ id, ...branchLike }: Query, isPortfolio: boolean) => {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={isPortfolio ? getPortfolioUrl(id) : getProjectQueryUrl(id, branchLike)}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCodeLink = (\n    hasAnalysis: boolean,\n    query: Query,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={\n            isPortfolio || isApplication ? translate('view_projects.page') : translate('code.page')\n          }\n          to={{ pathname: '/code', query }}\n        />\n      </li>\n    );\n  };\n\n  renderActivityLink = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike } = this.props;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('project_activity.page')}\n          to={{ pathname: '/project/activity', query }}\n        />\n      </li>\n    );\n  };\n\n  renderIssuesLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('issues.page')}\n          to={{ pathname: '/project/issues', query: { ...query, resolved: 'false' } }}\n        />\n      </li>\n    );\n  };\n\n  renderComponentMeasuresLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.measures')}\n          to={{ pathname: '/component_measures', query }}\n        />\n      </li>\n    );\n  };\n\n  renderSecurityHotspotsLink = (hasAnalysis: boolean, query: Query, isPortfolio: boolean) => {\n    return (\n      !isPortfolio && (\n        <li>\n          <MenuLink\n            activeClassName=\"active\"\n            hasAnalysis={hasAnalysis}\n            label={translate('layout.security_hotspots')}\n            to={{ pathname: '/security_hotspots', query }}\n          />\n        </li>\n      )\n    );\n  };\n\n  renderSecurityReports = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.security_reports')}\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query\n          }}\n        />\n      </li>\n    );\n  };\n\n  renderAdministration = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    const { branchLike, component } = this.props;\n\n    if (!this.getConfiguration().showSettings || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks(query, isProject, isApplication, isPortfolio);\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"menu\"\n            role=\"button\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {hasMessage('layout.settings', component.qualifier)\n              ? translate('layout.settings', component.qualifier)\n              : translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  renderAdministrationLinks = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    return [\n      this.renderSettingsLink(query, isApplication, isPortfolio),\n      this.renderBranchesLink(query, isProject),\n      this.renderBaselineLink(query, isApplication, isPortfolio),\n      this.renderConsoleAppLink(query, isApplication),\n      ...this.renderAdminExtensions(query, isApplication),\n      this.renderProfilesLink(query),\n      this.renderQualityGateLink(query),\n      this.renderCustomMeasuresLink(query),\n      this.renderLinksLink(query),\n      this.renderPermissionsLink(query),\n      this.renderBackgroundTasksLink(query),\n      this.renderUpdateKeyLink(query),\n      this.renderWebhooksLink(query, isProject),\n      this.renderDeletionLink(query)\n    ];\n  };\n\n  renderProjectInformationButton = (isProject: boolean, isApplication: boolean) => {\n    if (isPullRequest(this.props.branchLike)) {\n      return null;\n    }\n\n    return (\n      (isProject || isApplication) && (\n        <li>\n          <a\n            className=\"menu-button\"\n            onClick={(e: React.SyntheticEvent<HTMLAnchorElement>) => {\n              e.preventDefault();\n              e.currentTarget.blur();\n              this.props.onToggleProjectInfo();\n            }}\n            role=\"button\"\n            tabIndex={0}>\n            <BulletListIcon className=\"little-spacer-right\" />\n            {translate(isProject ? 'project' : 'application', 'info.title')}\n          </a>\n        </li>\n      )\n    );\n  };\n\n  renderSettingsLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/settings', query }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBranchesLink = (query: Query, isProject: boolean) => {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !isProject ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/branches', query }}>\n          {translate('project_branch_pull_request.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBaselineLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"baseline\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/baseline', query }}>\n          {translate('project_baseline.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderConsoleAppLink = (query: Query, isApplication: boolean) => {\n    if (!isApplication) {\n      return null;\n    }\n    return (\n      <li key=\"app-console\">\n        <Link activeClassName=\"active\" to={{ pathname: '/application/console', query }}>\n          {translate('application_console.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderProfilesLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_profiles', query }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderQualityGateLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_gate', query }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCustomMeasuresLink = (query: Query) => {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link activeClassName=\"active\" to={{ pathname: '/custom_measures', query }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderLinksLink = (query: Query) => {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/links', query }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderPermissionsLink = (query: Query) => {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project_roles', query }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBackgroundTasksLink = (query: Query) => {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/background_tasks', query }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderUpdateKeyLink = (query: Query) => {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/key', query }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderWebhooksLink = (query: Query, isProject: boolean) => {\n    if (!this.getConfiguration().showSettings || !isProject) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/webhooks', query }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderDeletionLink = (query: Query) => {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (\n      ![\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/deletion', query }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean, baseQuery: Query) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { ...baseQuery, qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions = (query: Query, isApplication: boolean) => {\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions\n      .filter(e => !isApplication || e.key !== 'governance/console')\n      .map(e => this.renderExtension(e, true, query));\n  };\n\n  renderExtensions = (query: Query) => {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n\n    if (withoutSecurityExtension.length === 0) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false, query))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"menu\"\n            role=\"button\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  render() {\n    const isProject = this.isProject();\n    const isApplication = this.isApplication();\n    const isPortfolio = this.isPortfolio();\n    const hasAnalysis = this.hasAnalysis();\n    const query = this.getQuery();\n    return (\n      <div className=\"display-flex-center display-flex-space-between\">\n        <NavBarTabs>\n          {this.renderDashboardLink(query, isPortfolio)}\n          {this.renderIssuesLink(hasAnalysis, query)}\n          {this.renderSecurityHotspotsLink(hasAnalysis, query, isPortfolio)}\n          {this.renderSecurityReports(hasAnalysis, query)}\n          {this.renderComponentMeasuresLink(hasAnalysis, query)}\n          {this.renderCodeLink(hasAnalysis, query, isApplication, isPortfolio)}\n          {this.renderActivityLink(hasAnalysis, query)}\n          {this.renderExtensions(query)}\n        </NavBarTabs>\n        <NavBarTabs>\n          {this.renderAdministration(query, isProject, isApplication, isPortfolio)}\n          {this.renderProjectInformationButton(isProject, isApplication)}\n        </NavBarTabs>\n      </div>\n    );\n  }\n}\n\nexport default withAppState(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport EscKeydownHandler from 'sonar-ui-common/components/controls/EscKeydownHandler';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport './InfoDrawer.css';\n\nexport interface InfoDrawerProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onClose: () => void;\n  top: number;\n}\n\nexport default function InfoDrawer(props: InfoDrawerProps) {\n  const { children, displayed, onClose, top } = props;\n\n  return (\n    <div\n      className={classNames('info-drawer info-drawer-pane', { open: displayed })}\n      style={{ top }}>\n      <div className=\"close-button\">\n        <ClearButton onClick={onClose} />\n      </div>\n      {displayed && (\n        <EscKeydownHandler onKeydown={onClose}>\n          <OutsideClickHandler onClickOutside={onClose}>\n            <div className=\"display-flex-column max-height-100\">{children}</div>\n          </OutsideClickHandler>\n        </EscKeydownHandler>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { getLocalizedMetricName } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { getHostUrl, getPathUrlAsString } from 'sonar-ui-common/helpers/urls';\nimport { getProjectUrl } from '../../../../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\nexport type BadgeFormats = 'md' | 'url';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  format?: BadgeFormats;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeSnippet(type: BadgeType, options: BadgeOptions) {\n  const url = getBadgeUrl(type, options);\n  const { branch, format = 'md', metric = 'alert_status', project } = options;\n\n  if (format === 'url') {\n    return url;\n  } else {\n    let label;\n    let projectUrl;\n\n    switch (type) {\n      case BadgeType.marketing:\n        label = 'SonarCloud';\n        break;\n      case BadgeType.measure:\n        label = getLocalizedMetricName({ key: metric });\n        break;\n      case BadgeType.qualityGate:\n      default:\n        label = 'Quality gate';\n        break;\n    }\n\n    if (project) {\n      projectUrl = getPathUrlAsString(getProjectUrl(project, branch), false);\n    }\n\n    const mdImage = `![${label}](${url})`;\n    return projectUrl ? `[${mdImage}](${projectUrl})` : mdImage;\n  }\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BadgeType } from './utils';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchWebApi } from '../../../../../../api/web-api';\nimport { BadgeColors, BadgeFormats, BadgeOptions, BadgeType } from './utils';\n\ninterface Props {\n  className?: string;\n  metrics: T.Dict<T.Metric>;\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(d => d.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(w => w.key === 'measure');\n          const param = ws && ws.params && ws.params.find(p => p.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () => {\n    return ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n  };\n\n  getFormatOptions = () => {\n    return ['md', 'url'].map(format => ({\n      label: translate('overview.badges.options.formats', format),\n      value: format\n    }));\n  };\n\n  getMetricOptions = () => {\n    return this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n  };\n\n  handleColorChange = ({ value }: { value: BadgeColors }) => {\n    this.props.updateOptions({ color: value });\n  };\n\n  handleFormatChange = ({ value }: { value: BadgeFormats }) => {\n    this.props.updateOptions({ format: value });\n  };\n\n  handleMetricChange = ({ value }: { value: string }) => {\n    this.props.updateOptions({ metric: value });\n  };\n\n  renderBadgeType = (type: BadgeType, options: BadgeOptions) => {\n    if (type === BadgeType.marketing) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-color\">\n            {translate('color')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            name=\"badge-color\"\n            onChange={this.handleColorChange}\n            options={this.getColorOptions()}\n            searchable={false}\n            value={options.color}\n          />\n        </>\n      );\n    } else if (type === BadgeType.measure) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-metric\">\n            {translate('overview.badges.metric')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            menuStyle={{ maxHeight: 100 }}\n            name=\"badge-metric\"\n            onChange={this.handleMetricChange}\n            options={this.getMetricOptions()}\n            searchable={false}\n            value={options.metric}\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { className, options, type } = this.props;\n    return (\n      <div className={className}>\n        {this.renderBadgeType(type, options)}\n\n        <label\n          className={classNames('spacer-right', {\n            'spacer-top': type !== BadgeType.qualityGate\n          })}\n          htmlFor=\"badge-format\">\n          {translate('format')}:\n        </label>\n        <Select\n          className=\"input-medium\"\n          clearable={false}\n          name=\"badge-format\"\n          onChange={this.handleFormatChange}\n          options={this.getFormatOptions()}\n          searchable={false}\n          value={this.props.options.format || 'md'}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CodeSnippet from '../../../../../../components/common/CodeSnippet';\nimport { getBranchLikeQuery } from '../../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../../types/branch-like';\nimport { MetricKey } from '../../../../../../types/metrics';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport './styles.css';\nimport { BadgeOptions, BadgeType, getBadgeSnippet, getBadgeUrl } from './utils';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: T.Dict<T.Metric>;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class ProjectBadges extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: MetricKey.alert_status }\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n\n    return (\n      <div className=\"display-flex-column\">\n        <h3>{translate('overview.badges.get_badge', qualifier)}</h3>\n        <p className=\"big-spacer-bottom\">{translate('overview.badges.description', qualifier)}</p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.measure === selectedType}\n          type={BadgeType.measure}\n          url={getBadgeUrl(BadgeType.measure, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.measure, 'description', qualifier)}\n        </p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.qualityGate === selectedType}\n          type={BadgeType.qualityGate}\n          url={getBadgeUrl(BadgeType.qualityGate, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.qualityGate, 'description', qualifier)}\n        </p>\n        <BadgeParams\n          className=\"big-spacer-bottom display-flex-column\"\n          metrics={this.props.metrics}\n          options={badgeOptions}\n          type={selectedType}\n          updateOptions={this.handleUpdateOptions}\n        />\n        <CodeSnippet isOneLine={true} snippet={getBadgeSnippet(selectedType, fullBadgeOptions)} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport BackIcon from 'sonar-ui-common/components/icons/BackIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface InfoDrawerPageProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onPageChange: () => void;\n}\n\nexport default function InfoDrawerPage(props: InfoDrawerPageProps) {\n  const { children, displayed, onPageChange } = props;\n  return (\n    <div\n      className={classNames(\n        'info-drawer-page info-drawer-pane display-flex-column overflow-hidden',\n        {\n          open: displayed\n        }\n      )}>\n      <h2 className=\"back-button big-padded bordered-bottom\" onClick={() => onPageChange()}>\n        <BackIcon className=\"little-spacer-right\" />\n        {translate('back')}\n      </h2>\n\n      {displayed && <div className=\"overflow-y-auto big-padded\">{children}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from '../../../../../../apps/account/notifications/NotificationsList';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../../../../components/hoc/withNotifications';\n\ninterface Props {\n  component: T.Component;\n}\n\nexport function ProjectNotifications(props: WithNotificationsProps & Props) {\n  const { channels, component, loading, notifications, perProjectTypes } = props;\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ project: component.key, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      project: component.key,\n      channel,\n      type\n    });\n  };\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${component.key}-${type}-${channel}`;\n  };\n\n  const projectNotifications = notifications.filter(n => n.project && n.project === component.key);\n\n  return (\n    <>\n      <h3>{translate('project.info.notifications')}</h3>\n\n      <Alert className=\"spacer-top\" variant=\"info\">\n        {translate('notification.dispatcher.information')}\n      </Alert>\n\n      <DeferredSpinner loading={loading}>\n        <table className=\"data zebra notifications-table\">\n          <thead>\n            <tr>\n              <th aria-label={translate('project')} />\n              {channels.map(channel => (\n                <th className=\"text-center\" key={channel}>\n                  <h4>{translate('notification.channel', channel)}</h4>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <NotificationsList\n            channels={channels}\n            checkboxId={getCheckboxId}\n            notifications={projectNotifications}\n            onAdd={handleAddNotification}\n            onRemove={handleRemoveNotification}\n            project={true}\n            types={perProjectTypes}\n          />\n        </table>\n      </DeferredSpinner>\n    </>\n  );\n}\n\nexport default withNotifications(ProjectNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ProjectInformationPages {\n  main,\n  badges,\n  notifications\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\n\nexport interface DrawerLinkProps<P> {\n  label: string;\n  onPageChange: (page: P) => void;\n  to: P;\n}\n\nexport function DrawerLink<P>(props: DrawerLinkProps<P>) {\n  const { label, to } = props;\n\n  return (\n    <a\n      className=\"display-flex-space-between bordered-bottom big-padded\"\n      onClick={() => props.onPageChange(to)}\n      role=\"link\"\n      tabIndex={0}>\n      {label}\n      <ChevronRightIcon />\n    </a>\n  );\n}\n\nexport default React.memo(DrawerLink);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h3>{translate('overview.project_key', qualifier)}</h3>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" readOnly={true} type=\"text\" value={componentKey} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectLinks } from '../../../../../../api/projectLinks';\nimport { orderLinks } from '../../../../../../helpers/projectLinks';\nimport MetaLink from './MetaLink';\n\ninterface Props {\n  component: T.LightComponent;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <>\n        <div className=\"big-padded bordered-bottom\">\n          <h3>{translate('overview.external_links')}</h3>\n          <ul className=\"project-info-list\">\n            {orderedLinks.map(link => (\n              <MetaLink key={link.id} link={link} />\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityGateUrl } from '../../../../../../helpers/urls';\n\ninterface Props {\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate }: Props) {\n  return (\n    <>\n      <h3>{translate('project.info.quality_gate')}</h3>\n\n      <ul className=\"project-info-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">({translate('default')})</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../../../../api/rules';\nimport { getQualityProfileUrl } from '../../../../../../helpers/urls';\nimport { getLanguages, Store } from '../../../../../../store/rootReducer';\n\ninterface StateProps {\n  languages: T.Languages;\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  profiles: T.ComponentQualityProfile[];\n}\n\ninterface State {\n  deprecatedByKey: T.Dict<number>;\n}\n\nexport class MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const existingProfiles = this.props.profiles.filter(p => !p.deleted);\n    const requests = existingProfiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: T.Dict<number> = {};\n          responses.forEach((count, i) => {\n            const profileKey = existingProfiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: T.ComponentQualityProfile) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">({languageName})</span>\n        {profile.deleted ? (\n          profile.name\n        ) : (\n          <Link to={getQualityProfileUrl(profile.name, profile.language)}>{profile.name}</Link>\n        )}\n      </div>\n    );\n\n    if (profile.deleted) {\n      const tooltip = translateWithParameters('overview.deleted_profile', profile.name);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deleted-profile\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h3 className={headerClassName}>{translate('overview.quality_profiles')}</h3>\n\n        <ul className=\"project-info-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure, localizeMetric } from 'sonar-ui-common/helpers/measures';\nimport DrilldownLink from '../../../../../../components/shared/DrilldownLink';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport { MetricKey } from '../../../../../../types/metrics';\n\nexport interface MetaSizeProps {\n  component: T.Component;\n  measures: T.Measure[];\n}\n\nexport default function MetaSize({ component, measures }: MetaSizeProps) {\n  const isApp = component.qualifier === ComponentQualifier.Application;\n  const ncloc = measures.find(measure => measure.metric === MetricKey.ncloc);\n  const projects = isApp\n    ? measures.find(measure => measure.metric === MetricKey.projects)\n    : undefined;\n\n  return (\n    <>\n      <h3>{localizeMetric(MetricKey.ncloc)}</h3>\n      <div className=\"display-flex-center\">\n        {ncloc ? (\n          <>\n            <DrilldownLink className=\"huge\" component={component.key} metric={MetricKey.ncloc}>\n              {formatMeasure(ncloc.value, 'SHORT_INT')}\n            </DrilldownLink>\n\n            <span className=\"spacer-left\">\n              <SizeRating value={Number(ncloc.value)} />\n            </span>\n          </>\n        ) : (\n          <span>0</span>\n        )}\n\n        {isApp && (\n          <span className=\"huge-spacer-left display-inline-flex-center\">\n            {projects ? (\n              <DrilldownLink component={component.key} metric={MetricKey.projects}>\n                <span className=\"big\">{formatMeasure(projects.value, 'SHORT_INT')}</span>\n              </DrilldownLink>\n            ) : (\n              <span className=\"big\">0</span>\n            )}\n            <span className=\"little-spacer-left text-muted\">\n              {translate('metric.projects.name')}\n            </span>\n          </span>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, without } from 'lodash';\nimport * as React from 'react';\nimport { searchProjectTags } from '../../../../../../api/components';\nimport TagsSelector from '../../../../../../components/tags/TagsSelector';\n\ninterface Props {\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setApplicationTags, setProjectTags } from '../../../../../../api/components';\nimport TagsList from '../../../../../../components/tags/TagsList';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport MetaTagsSelector from './MetaTagsSelector';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class MetaTags extends React.PureComponent<Props> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  setTags = (values: string[]) => {\n    const { component } = this.props;\n\n    if (component.qualifier === ComponentQualifier.Application) {\n      return setApplicationTags({\n        application: component.key,\n        tags: values.join(',')\n      });\n    } else {\n      return setProjectTags({\n        project: component.key,\n        tags: values.join(',')\n      });\n    }\n  };\n\n  handleSetProjectTags = (values: string[]) => {\n    this.setTags(values).then(\n      () => this.props.onComponentChange({ tags: values }),\n      () => {}\n    );\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"big-spacer-top project-info-tags\" ref={card => (this.card = card)}>\n          <Dropdown\n            closeOnClick={false}\n            closeOnClickOutside={true}\n            overlay={\n              <MetaTagsSelector\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            }\n            overlayPlacement={PopupPlacement.BottomLeft}>\n            <ButtonLink innerRef={tagsList => (this.tagsList = tagsList)} stopPropagation={true}>\n              <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n            </ButtonLink>\n          </Dropdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top project-info-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../../../components/common/PrivacyBadgeContainer';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport DrawerLink from './DrawerLink';\nimport MetaKey from './meta/MetaKey';\nimport MetaLinks from './meta/MetaLinks';\nimport MetaQualityGate from './meta/MetaQualityGate';\nimport MetaQualityProfiles from './meta/MetaQualityProfiles';\nimport MetaSize from './meta/MetaSize';\nimport MetaTags from './meta/MetaTags';\nimport { ProjectInformationPages } from './ProjectInformationPages';\n\nexport interface ProjectInformationRendererProps {\n  canConfigureNotifications: boolean;\n  canUseBadges: boolean;\n  component: T.Component;\n  measures?: T.Measure[];\n  onComponentChange: (changes: {}) => void;\n  onPageChange: (page: ProjectInformationPages) => void;\n}\n\nexport function ProjectInformationRenderer(props: ProjectInformationRendererProps) {\n  const { canConfigureNotifications, canUseBadges, component, measures = [] } = props;\n\n  const isApp = component.qualifier === ComponentQualifier.Application;\n\n  return (\n    <>\n      <div>\n        <h2 className=\"big-padded bordered-bottom\">\n          {translate(isApp ? 'application' : 'project', 'info.title')}\n        </h2>\n      </div>\n\n      <div className=\"overflow-y-auto\">\n        <div className=\"big-padded bordered-bottom\">\n          <div className=\"display-flex-center\">\n            <h3 className=\"spacer-right\">{translate('project.info.description')}</h3>\n            {component.visibility && (\n              <PrivacyBadgeContainer\n                qualifier={component.qualifier}\n                visibility={component.visibility}\n              />\n            )}\n          </div>\n\n          {component.description && (\n            <p className=\"it__project-description\">{component.description}</p>\n          )}\n\n          <MetaTags component={component} onComponentChange={props.onComponentChange} />\n        </div>\n\n        <div className=\"big-padded bordered-bottom it__project-loc-value\">\n          <MetaSize component={component} measures={measures} />\n        </div>\n\n        {!isApp &&\n          (component.qualityGate ||\n            (component.qualityProfiles && component.qualityProfiles.length > 0)) && (\n            <>\n              <div className=\"big-padded bordered-bottom\">\n                {component.qualityGate && <MetaQualityGate qualityGate={component.qualityGate} />}\n\n                {component.qualityProfiles && component.qualityProfiles.length > 0 && (\n                  <MetaQualityProfiles\n                    headerClassName={component.qualityGate ? 'big-spacer-top' : undefined}\n                    profiles={component.qualityProfiles}\n                  />\n                )}\n              </div>\n            </>\n          )}\n\n        {!isApp && <MetaLinks component={component} />}\n\n        <div className=\"big-padded bordered-bottom\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n        </div>\n\n        {canUseBadges && (\n          <DrawerLink\n            label={translate('overview.badges.get_badge', component.qualifier)}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.badges}\n          />\n        )}\n        {canConfigureNotifications && (\n          <DrawerLink\n            label={translate('project.info.to_notifications')}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.notifications}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ProjectInformationRenderer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getMeasures } from '../../../../../api/measures';\nimport { isLoggedIn } from '../../../../../helpers/users';\nimport { fetchMetrics } from '../../../../../store/rootActions';\nimport { getCurrentUser, getMetrics, Store } from '../../../../../store/rootReducer';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { MetricKey } from '../../../../../types/metrics';\nimport ProjectBadges from './badges/ProjectBadges';\nimport InfoDrawerPage from './InfoDrawerPage';\nimport ProjectNotifications from './notifications/ProjectNotifications';\nimport './ProjectInformation.css';\nimport { ProjectInformationPages } from './ProjectInformationPages';\nimport ProjectInformationRenderer from './ProjectInformationRenderer';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  currentUser: T.CurrentUser;\n  fetchMetrics: () => void;\n  onComponentChange: (changes: {}) => void;\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface State {\n  measures?: T.Measure[];\n  page: ProjectInformationPages;\n}\n\nexport class ProjectInformation extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    page: ProjectInformationPages.main\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  setPage = (page: ProjectInformationPages = ProjectInformationPages.main) => {\n    this.setState({ page });\n  };\n\n  loadMeasures = () => {\n    const {\n      component: { key }\n    } = this.props;\n\n    return getMeasures({\n      component: key,\n      metricKeys: [MetricKey.ncloc, MetricKey.projects].join()\n    }).then(measures => {\n      if (this.mounted) {\n        this.setState({ measures });\n      }\n    });\n  };\n\n  render() {\n    const { branchLike, component, currentUser, metrics } = this.props;\n    const { measures, page } = this.state;\n\n    const canConfigureNotifications =\n      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;\n    const canUseBadges =\n      metrics !== undefined &&\n      component.visibility !== 'private' &&\n      (component.qualifier === ComponentQualifier.Application ||\n        component.qualifier === ComponentQualifier.Project);\n\n    return (\n      <>\n        <ProjectInformationRenderer\n          canConfigureNotifications={canConfigureNotifications}\n          canUseBadges={canUseBadges}\n          component={component}\n          measures={measures}\n          onComponentChange={this.props.onComponentChange}\n          onPageChange={this.setPage}\n        />\n        {canUseBadges && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.badges}\n            onPageChange={this.setPage}>\n            <ProjectBadges\n              branchLike={branchLike}\n              metrics={metrics}\n              project={component.key}\n              qualifier={component.qualifier}\n            />\n          </InfoDrawerPage>\n        )}\n        {canConfigureNotifications && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.notifications}\n            onPageChange={this.setPage}>\n            <ProjectNotifications component={component} />\n          </InfoDrawerPage>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ContextNavBar from 'sonar-ui-common/components/ui/ContextNavBar';\nimport {\n  ProjectAlmBindingConfigurationErrors,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../../../types/tasks';\nimport { rawSizes } from '../../../theme';\nimport RecentHistory from '../../RecentHistory';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport ComponentNavProjectBindingErrorNotif from './ComponentNavProjectBindingErrorNotif';\nimport Header from './Header';\nimport HeaderMeta from './HeaderMeta';\nimport Menu from './Menu';\nimport InfoDrawer from './projectInformation/InfoDrawer';\nimport ProjectInformation from './projectInformation/ProjectInformation';\n\nexport interface ComponentNavProps {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n  onWarningDismiss: () => void;\n  projectBinding?: ProjectAlmBindingResponse;\n  projectBindingErrors?: ProjectAlmBindingConfigurationErrors;\n  warnings: TaskWarning[];\n}\n\nconst ALERT_HEIGHT = 30;\n\nexport default function ComponentNav(props: ComponentNavProps) {\n  const {\n    branchLikes,\n    component,\n    currentBranchLike,\n    currentTask,\n    currentTaskOnSameBranch,\n    isInProgress,\n    isPending,\n    projectBinding,\n    projectBindingErrors,\n    warnings\n  } = props;\n  const { contextNavHeightRaw, globalNavHeightRaw } = rawSizes;\n\n  const [displayProjectInfo, setDisplayProjectInfo] = React.useState(false);\n\n  React.useEffect(() => {\n    const { breadcrumbs, key, name } = component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (\n      [\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application,\n        ComponentQualifier.Developper\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      RecentHistory.add(key, name, qualifier.toLowerCase());\n    }\n  }, [component, component.key]);\n\n  let contextNavHeight = contextNavHeightRaw;\n\n  let bgTaskNotifComponent;\n  if (isInProgress || isPending || (currentTask && currentTask.status === TaskStatuses.Failed)) {\n    bgTaskNotifComponent = (\n      <ComponentNavBgTaskNotif\n        component={component}\n        currentTask={currentTask}\n        currentTaskOnSameBranch={currentTaskOnSameBranch}\n        isInProgress={isInProgress}\n        isPending={isPending}\n      />\n    );\n    contextNavHeight += ALERT_HEIGHT;\n  }\n\n  let prDecoNotifComponent;\n  if (projectBindingErrors !== undefined) {\n    prDecoNotifComponent = <ComponentNavProjectBindingErrorNotif component={component} />;\n    contextNavHeight += ALERT_HEIGHT;\n  }\n\n  return (\n    <ContextNavBar\n      height={contextNavHeight}\n      id=\"context-navigation\"\n      notif={\n        <>\n          {bgTaskNotifComponent}\n          {prDecoNotifComponent}\n        </>\n      }>\n      <div\n        className={classNames('display-flex-center display-flex-space-between little-padded-top', {\n          'padded-bottom': warnings.length === 0\n        })}>\n        <Header\n          branchLikes={branchLikes}\n          component={component}\n          currentBranchLike={currentBranchLike}\n          projectBinding={projectBinding}\n        />\n        <HeaderMeta\n          branchLike={currentBranchLike}\n          component={component}\n          onWarningDismiss={props.onWarningDismiss}\n          warnings={warnings}\n        />\n      </div>\n      <Menu\n        branchLike={currentBranchLike}\n        branchLikes={branchLikes}\n        component={component}\n        isInProgress={isInProgress}\n        isPending={isPending}\n        onToggleProjectInfo={() => setDisplayProjectInfo(!displayProjectInfo)}\n      />\n      <InfoDrawer\n        displayed={displayProjectInfo}\n        onClose={() => setDisplayProjectInfo(false)}\n        top={globalNavHeightRaw + contextNavHeightRaw}>\n        <ProjectInformation\n          branchLike={currentBranchLike}\n          component={component}\n          onComponentChange={props.onComponentChange}\n        />\n      </InfoDrawer>\n    </ContextNavBar>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { HttpStatus } from 'sonar-ui-common/helpers/request';\nimport { getProjectAlmBinding, validateProjectAlmBinding } from '../../api/alm-settings';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getAnalysisStatus, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { withAppState } from '../../components/hoc/withAppState';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../helpers/branch-like';\nimport { getPortfolioUrl } from '../../helpers/urls';\nimport { registerBranchStatus, requireAuthorization } from '../../store/rootActions';\nimport {\n  ProjectAlmBindingConfigurationErrors,\n  ProjectAlmBindingResponse\n} from '../../types/alm-settings';\nimport { BranchLike } from '../../types/branch-like';\nimport { ComponentQualifier, isPortfolioLike } from '../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../types/tasks';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport { ComponentContext } from './ComponentContext';\nimport PageUnavailableDueToIndexation from './indexation/PageUnavailableDueToIndexation';\nimport ComponentNav from './nav/component/ComponentNav';\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  children: React.ReactElement;\n  location: Pick<Location, 'query' | 'pathname'>;\n  registerBranchStatus: (branchLike: BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component?: T.Component;\n  currentTask?: Task;\n  isPending: boolean;\n  loading: boolean;\n  projectBinding?: ProjectAlmBindingResponse;\n  projectBindingErrors?: ProjectAlmBindingConfigurationErrors;\n  tasksInProgress?: Task[];\n  warnings: TaskWarning[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  fetchComponent = async () => {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    let componentWithQualifier;\n    try {\n      const [nav, { component }] = await Promise.all([\n        getComponentNavigation({ component: key, branch, pullRequest }),\n        getComponentData({ component: key, branch, pullRequest })\n      ]);\n      componentWithQualifier = this.addQualifier({ ...nav, ...component });\n    } catch (e) {\n      if (this.mounted) {\n        if (e && e.status === HttpStatus.Forbidden) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n      return;\n    }\n\n    /*\n     * There used to be a redirect from /dashboard to /portfolio which caused issues.\n     * Links should be fixed to not rely on this redirect, but:\n     * This is a fail-safe in case there are still some faulty links remaining.\n     */\n    if (\n      this.props.location.pathname.match('dashboard') &&\n      isPortfolioLike(componentWithQualifier.qualifier)\n    ) {\n      this.props.router.replace(getPortfolioUrl(componentWithQualifier.key));\n    }\n\n    const { branchLike, branchLikes } = await this.fetchBranches(componentWithQualifier);\n\n    let projectBinding;\n    if (componentWithQualifier.qualifier === ComponentQualifier.Project) {\n      projectBinding = await getProjectAlmBinding(key).catch(() => undefined);\n    }\n\n    if (this.mounted) {\n      this.setState({\n        branchLike,\n        branchLikes,\n        component: componentWithQualifier,\n        projectBinding,\n        loading: false\n      });\n\n      this.fetchStatus(componentWithQualifier);\n      this.fetchWarnings(componentWithQualifier, branchLike);\n      this.fetchProjectBindingErrors(componentWithQualifier);\n    }\n  };\n\n  fetchBranches = async (componentWithQualifier: T.Component) => {\n    const breadcrumb = componentWithQualifier.breadcrumbs.find(({ qualifier }) => {\n      return ([ComponentQualifier.Application, ComponentQualifier.Project] as string[]).includes(\n        qualifier\n      );\n    });\n\n    let branchLike = undefined;\n    let branchLikes: BranchLike[] = [];\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      const [branches, pullRequests] = await Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === ComponentQualifier.Application\n          ? Promise.resolve([])\n          : getPullRequests(key)\n      ]);\n\n      branchLikes = [...branches, ...pullRequests];\n      branchLike = this.getCurrentBranchLike(branchLikes);\n\n      this.registerBranchStatuses(branchLikes, componentWithQualifier);\n    }\n\n    return { branchLike, branchLikes };\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === TaskStatuses.InProgress\n              );\n\n              const currentTaskChanged =\n                (!currentTask && newCurrentTask) ||\n                (currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id);\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === TaskStatuses.Pending);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: BranchLike) => {\n    if (component.qualifier === ComponentQualifier.Project) {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  fetchProjectBindingErrors = async (component: T.Component) => {\n    if (\n      component.qualifier === ComponentQualifier.Project &&\n      component.analysisDate === undefined &&\n      this.props.appState.branchesEnabled\n    ) {\n      const projectBindingErrors = await validateProjectAlmBinding(component.key).catch(\n        () => undefined\n      );\n      if (this.mounted) {\n        this.setState({ projectBindingErrors });\n      }\n    }\n  };\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  getCurrentBranchLike = (branchLikes: BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: Task, branchLike?: BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === TaskStatuses.Failed || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: Task[], branchLike?: BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (task: Pick<Task, 'branch' | 'pullRequest'>, branchLike?: BranchLike) => {\n    if (branchLike) {\n      if (isMainBranch(branchLike)) {\n        return (!task.pullRequest && !task.branch) || branchLike.name === task.branch;\n      }\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isBranch(branchLike)) {\n        return branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  handleWarningDismiss = () => {\n    const { component } = this.state;\n    if (component !== undefined) {\n      this.fetchWarnings(component);\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    if (component?.needIssueSync) {\n      return <PageUnavailableDueToIndexation component={component} />;\n    }\n\n    const {\n      branchLike,\n      branchLikes,\n      currentTask,\n      isPending,\n      projectBinding,\n      projectBindingErrors,\n      tasksInProgress\n    } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component &&\n          !([ComponentQualifier.File, ComponentQualifier.TestFile] as string[]).includes(\n            component.qualifier\n          ) && (\n            <ComponentNav\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={branchLike}\n              currentTask={currentTask}\n              currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n              isInProgress={isInProgress}\n              isPending={isPending}\n              onComponentChange={this.handleComponentChange}\n              onWarningDismiss={this.handleWarningDismiss}\n              projectBinding={projectBinding}\n              projectBindingErrors={projectBindingErrors}\n              warnings={this.state.warnings}\n            />\n          )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange,\n              projectBinding\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { registerBranchStatus, requireAuthorization };\n\nexport default withAppState(withRouter(connect(null, mapDispatchToProps)(ComponentContainer)));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport './CodeSnippet.css';\n\nexport interface CodeSnippetProps {\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  snippet: string | (string | undefined)[];\n}\n\nexport default function CodeSnippet(props: CodeSnippetProps) {\n  const { isOneLine, noCopy, snippet } = props;\n  const snippetRef = React.useRef<HTMLPreElement>(null);\n\n  let finalSnippet: string;\n  if (Array.isArray(snippet)) {\n    finalSnippet = snippet.filter(line => isDefined(line)).join(isOneLine ? ' ' : ' \\\\\\n  ');\n  } else {\n    finalSnippet = snippet;\n  }\n\n  return (\n    <div className={classNames('code-snippet spacer-top spacer-bottom display-flex-row', {})}>\n      <pre className=\"flex-1\" ref={snippetRef}>\n        {finalSnippet}\n      </pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { isWebUri } from 'valid-url';\n\nexport interface DocumentationTooltipProps {\n  children?: React.ReactNode;\n  className?: string;\n  content?: React.ReactNode;\n  links?: Array<{ href: string; label: string; inPlace?: boolean }>;\n  title?: string;\n}\n\nexport default function DocumentationTooltip(props: DocumentationTooltipProps) {\n  const { className, content, links, title } = props;\n\n  return (\n    <HelpTooltip\n      className={className}\n      overlay={\n        <div className=\"big-padded-top big-padded-bottom\">\n          {title && (\n            <div className=\"spacer-bottom\">\n              <strong>{title}</strong>\n            </div>\n          )}\n\n          {content && <p>{content}</p>}\n\n          {links && (\n            <>\n              <hr className=\"big-spacer-top big-spacer-bottom\" />\n\n              {links.map(({ href, label, inPlace }) => (\n                <div className=\"little-spacer-bottom\" key={label}>\n                  {inPlace ? (\n                    <Link to={href}>\n                      <span>{label}</span>\n                    </Link>\n                  ) : (\n                    <a\n                      className=\"display-inline-flex-center link-with-icon\"\n                      href={href}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {isWebUri(href) && <DetachIcon size={14} className=\"spacer-right\" />}\n                      <span>{label}</span>\n                    </a>\n                  )}\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n      }>\n      {props.children}\n    </HelpTooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <MultiSelect\n      elements={props.tags}\n      listSize={props.listSize}\n      onSearch={props.onSearch}\n      onSelect={props.onSelect}\n      onUnselect={props.onUnselect}\n      placeholder={translate('search.search_for_tags')}\n      selectedElements={props.selectedTags}\n      validateSearchInput={validateTag}\n    />\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  get,\n  getJSON,\n  HttpStatus,\n  parseError,\n  parseJSON,\n  post\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketCloudBindingDefinition,\n  BitbucketCloudProjectAlmBindingParams,\n  BitbucketProjectAlmBindingParams,\n  BitbucketServerBindingDefinition,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingConfigurationErrors,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getAlmSettingsNoCatch(project).catch(throwGlobalError);\n}\n\nexport function getAlmSettingsNoCatch(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project }).then(({ almSettings }) => almSettings);\n}\n\nexport function validateAlmSettings(key: string): Promise<string> {\n  return get('/api/alm_settings/validate', { key })\n    .then(() => {\n      return '';\n    })\n    .catch((response: Response) => {\n      if (response.status === HttpStatus.BadRequest) {\n        return parseError(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketServerConfiguration(data: BitbucketServerBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketServerConfiguration(\n  data: BitbucketServerBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketCloudConfiguration(data: BitbucketCloudBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketCloudConfiguration(\n  data: BitbucketCloudBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketCloudBinding(data: BitbucketCloudProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucketcloud_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n\nexport function validateProjectAlmBinding(\n  projectKey: string\n): Promise<ProjectAlmBindingConfigurationErrors | undefined> {\n  return get('/api/alm_settings/validate_binding', { project: projectKey })\n    .then(() => undefined)\n    .catch((response: Response) => {\n      if (response.status === HttpStatus.BadRequest) {\n        return parseJSON(response);\n      }\n      return throwGlobalError(response);\n    });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Branch, PullRequest } from '../types/branch-like';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n\nexport function excludeBranchFromPurge(projectKey: string, branchName: string, excluded: boolean) {\n  return post('/api/project_branches/set_automatic_deletion_protection', {\n    project: projectKey,\n    branch: branchName,\n    value: excluded\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nexport const DEFAULT_HOMEPAGE: T.HomePage = { type: 'PROJECTS' };\n\nexport class HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  handleReset = () => {\n    this.props.setHomePage(DEFAULT_HOMEPAGE);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const isChecked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const isDefault = isChecked && isSameHomePage(currentPage, DEFAULT_HOMEPAGE);\n    const tooltip = isChecked\n      ? translate(isDefault ? 'homepage.current.is_default' : 'homepage.current')\n      : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {isDefault ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={isChecked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={isChecked ? this.handleReset : this.handleClick}>\n            <HomeIcon filled={isChecked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getBranchLikeQuery } from '../../helpers/branch-like';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\nconst issueParamsPerMetric: T.Dict<T.Dict<string>> = {\n  blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  new_blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  new_critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  major_violations: { resolved: 'false', severities: 'MAJOR' },\n  new_major_violations: { resolved: 'false', severities: 'MAJOR' },\n  minor_violations: { resolved: 'false', severities: 'MINOR' },\n  new_minor_violations: { resolved: 'false', severities: 'MINOR' },\n  info_violations: { resolved: 'false', severities: 'INFO' },\n  new_info_violations: { resolved: 'false', severities: 'INFO' },\n  open_issues: { resolved: 'false', statuses: 'OPEN' },\n  reopened_issues: { resolved: 'false', statuses: 'REOPENED' },\n  confirmed_issues: { resolved: 'false', statuses: 'CONFIRMED' },\n  false_positive_issues: { resolutions: 'FALSE-POSITIVE' },\n  code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  new_code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  bugs: { resolved: 'false', types: 'BUG' },\n  new_bugs: { resolved: 'false', types: 'BUG' },\n  vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' },\n  new_vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' }\n};\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: T.Dict<string | boolean> = {\n      ...(issueParamsPerMetric[this.props.metric] || { resolved: 'false' })\n    };\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl({\n      componentKey: this.props.component,\n      metric: this.props.metric,\n      branchLike: this.props.branchLike,\n      listView: true\n    });\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".code-snippet{background:#e6e6e6;border-radius:3px}.code-snippet pre{padding:8px 16px;border-right:1px solid hsla(0,0%,78.4%,.5);overflow-y:hidden;overflow-x:auto}.code-snippet>button{height:auto;border:0;border-radius:0;background:transparent;padding:8px}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:hsla(0,0%,78.4%,.5);color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface PrivacyBadgeContainerProps {\n  className?: string;\n  qualifier: string;\n  visibility: T.Visibility;\n}\n\nexport default function PrivacyBadgeContainer({\n  className,\n  qualifier,\n  visibility\n}: PrivacyBadgeContainerProps) {\n  if (visibility !== 'private') {\n    return null;\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      <div className={classNames('badge', className)}>{translate('visibility', visibility)}</div>\n    </Tooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { getBranchStatusByBranchLike, Store } from '../../store/rootReducer';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ExposedProps {\n  branchLike: BranchLike;\n  component: string;\n}\n\ninterface BranchStatusProps {\n  status?: string;\n}\n\nexport function BranchStatus({ status }: BranchStatusProps) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, props: ExposedProps) => {\n  const { branchLike, component } = props;\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\ninterface RawDomain {\n  actions: T.WebApi.Action[];\n  deprecatedSince?: string;\n  description: string;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<RawDomain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r => r.webServices)\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<T.WebApi.Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { getLinkName } from '../../../../../../helpers/projectLinks';\nimport isValidUri from '../../../../../utils/isValidUri';\n\ninterface Props {\n  iconOnly?: boolean;\n  link: T.ProjectLink;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class MetaLink extends React.PureComponent<Props, State> {\n  state = { expanded: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  handleCollapse = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleSelect = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n  };\n\n  render() {\n    const { iconOnly, link } = this.props;\n    const linkTitle = getLinkName(link);\n    const isValid = isValidUri(link.url);\n    return (\n      <li>\n        <a\n          className=\"link-with-icon\"\n          href={isValid ? link.url : undefined}\n          onClick={isValid ? undefined : this.handleClick}\n          rel=\"nofollow noreferrer noopener\"\n          target=\"_blank\"\n          title={linkTitle}>\n          <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n          {!iconOnly && linkTitle}\n        </a>\n        {this.state.expanded && (\n          <div className=\"little-spacer-top display-flex-center\">\n            <input\n              className=\"overview-key width-80\"\n              onClick={this.handleSelect}\n              readOnly={true}\n              type=\"text\"\n              value={link.url}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.handleCollapse} />\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}