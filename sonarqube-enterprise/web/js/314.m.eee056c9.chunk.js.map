{"version":3,"sources":["webpack:///./src/main/js/apps/settings/styles.css?cb9e","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForJSON.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/CreationTooltip.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/AlmSpecificForm.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/helpers/sanitize.ts","webpack:///./src/main/js/components/common/ScreenPositionHelper.tsx","webpack:///./src/main/js/api/settings.ts","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","handleError","key","dispatch","response","then","message","Promise","reject","state","reseting","handleClose","this","setState","handleReset","handleSubmit","props","onReset","header","contentLabel","onRequestClose","className","onSubmit","onClick","setting","isDefault","changedValue","hasValueChanged","hasValueToResetTo","definition","hasBeenChangedToEmptyValue","showReset","style","lineHeight","disabled","hasError","onSave","onCancel","renderModal","InputForBoolean","onChange","name","value","displayedValue","formatError","handleInputChange","event","target","format","JSON","stringify","parse","undefined","e","rows","Alert","variant","currentTarget","handleKeyDown","keyCode","onKeyDown","type","InputForNumber","changing","handleChangeClick","nextProps","autoComplete","autoFocus","renderInput","fill","gray60","map","option","label","clearable","InputForString","typeMapping","STRING","TEXT","PASSWORD","BOOLEAN","INTEGER","LONG","FLOAT","other","InputComponent","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","multiValues","values","length","fieldKey","emptyValue","newFields","fieldValues","fields","field","width","minWidth","marginTop","description","renderFields","Input","mounted","success","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","handleCancel","passValidation","checkValue","handleSave","saveValue","changes","loading","validationMessage","propertyName","effectiveValue","title","dangerouslySetInnerHTML","__html","sanitize","mapDispatchToProps","getState","defaultValue","keys","catch","ownProps","DefinitionsList","settings","super","error","handleFormSubmit","preventDefault","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","htmlFor","id","required","withCurrentUser","renderEmailForm","subCategoryKey","category","fetchValues","prevProps","prevKeys","join","bySubCategory","subCategory","subCategories","Object","sortedSubCategories","toLowerCase","filteredSubCategories","filter","c","DEFAULT_STATUS","alertSuccess","failureMessage","Validating","STATUS_ICON","Failure","Success","getPrDecoFeatureDescription","alm","GitLab","GitHub","AlmBindingDefinitionBox","branchesEnabled","multipleDefinitions","status","onEdit","onDelete","url","Warning","overlay","defaultMessage","link","href","developer","sourceEdition","community","rel","getPRDecorationFeatureStatus","includes","BitbucketCloud","getImportFeatureStatus","to","onCheck","withAppState","appState","edition","children","preventCreation","enterprise","mouseLeaveDelay","AlmTabRenderer","almTab","definitions","definitionStatus","editDefinition","editedDefinition","loadingAlmDefinitions","loadingProjectCount","multipleAlmEnabled","onCreate","def","AlmBindingDefinitionForm","bindingDefinition","alreadyHaveInstanceConfigured","afterSubmit","CategoryDefinitionsList","handleCreate","handleEdit","definitionKey","find","d","handleAfterSubmit","config","onUpdateDefinitions","DeleteModal","projectCount","confirmButtonText","confirmData","isDestructive","onClose","onConfirm","showProjectCountWarning","tabs","alt","height","src","BitbucketServer","Azure","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlmTab","bindingDefinitions","azure","gitlab","github","bitbucket","bitbucketcloud","onSelect","onSelectAlmTab","selected","onCheckConfiguration","onCancelDelete","onConfirmDelete","handleConfirmDelete","fetchPullRequestDecorationSetting","handleSelectAlm","handleCancelDelete","handleDelete","async","_","location","query","forEach","Boolean","withRouter","AnalysisScope","selectedCategory","abap","apex","cobol","css","flex","go","html","java","javascript","kotlin","php","python","rpg","ruby","scala","swift","typescript","xml","categories","router","availableLanguages","selectedLanguage","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","originalValue","getLanguages","newOption","placeholder","days","saving","onSelectDays","onSelectSetting","currentSetting","currentSettingValue","String","fetchNewCodePeriodSetting","isChanged","isValid","BaselineSettingPreviousVersion","BaselineSettingDays","onChangeDays","renderFieldWrapper","input","help","renderHelp","helpExample","helpParams","renderLabel","optional","renderBooleanField","onFieldChange","propKey","inputExtra","v","renderField","maxLength","AlmSpecificForm","instances","formData","repository","slug","summaryCommentEnabled","monorepo","monorepoEnabled","formFields","instance","doc_link","display","optionRenderer","PRDecorationBindingRenderer","isConfigured","updating","successfullyUpdated","checkingConfiguration","configurationErrors","isSysAdmin","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","errors","msg","scope","Global","REQUIRED_FIELDS_BY_ALM","fetchDefinitions","project","all","getProjectBinding","originalData","newFormData","validateForm","checkConfiguration","catchError","projectKey","additionalFields","submitProjectAlmBinding","handleFieldChange","isDataSame","reduce","result","handleCheckConfiguration","NotFound","throwGlobalError","almSpecificFields","almSetting","projectName","repositoryName","oKey","oRepository","oSlug","osummaryCommentEnabled","omonorepo","Admin","datacenter","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","requiresBranchesEnabled","defaultCategory","categoriesWithName","concat","sortedCategories","active","PageHeader","InstanceMessage","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","defer","ScreenPositionHelper","top","AllCategoriesList","filtered","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","sanitizeStringRestricted","ALLOWED_TAGS","ALLOWED_ATTR","sanitizeString","USE_PROFILES","getPosition","containerPos","container","getBoundingClientRect","pageYOffset","left","pageXOffset","debouncedOnResize","forceUpdate","addEventListener","removeEventListener","ref","getDefinitions","r","getValues","data","setSettingValue","setSimpleSettingValue","resetSettingValue","sendTestEmail","checkSecretKey","generateSecretKey","encryptValue","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","parsed","parseInt","isNaN","getSettingValue","analysis","referenceBranch","validateSetting","overrideGeneralSetting","isInvalid"],"mappings":"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","file":"js/314.m.eee056c9.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#settings-page .layout-page-side,#settings-page .layout-page-side-outer{width:calc(50vw - 480px);border-right:none}#settings-page .layout-page-side-inner{width:160px;margin-left:calc(50vw - 639px)}#settings-page .layout-page-main{padding:0}#settings-page .layout-page-main-inner{max-width:1110px}#settings-page .top-bar-outer{height:80px}#settings-page .top-bar{background-color:#f3f3f3;position:fixed;z-index:55;left:0;right:0}#settings-page .top-bar-inner{max-width:1280px;margin:0 auto;height:80px;box-sizing:border-box}#settings-page .page-description,#settings-page .page-title{float:none}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#666}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}.side-tabs-menu{margin-top:16px}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#333;cursor:default}@media (max-width:1320px){#settings-page .layout-page-side,#settings-page .layout-page-side-outer{width:180px}#settings-page .layout-page-side-inner{margin-left:20px}#settings-page .top-bar-inner{margin:0 20px}}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    if (definition.type === 'JSON') {\n      try {\n        JSON.parse(value);\n      } catch (e) {\n        dispatch(failValidation(key, e.message));\n        return false;\n      }\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Setting } from '../../../types/settings';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nconst JSON_SPACE_SIZE = 4;\n\ninterface State {\n  formatError: boolean;\n}\n\nexport default class InputForJSON extends React.PureComponent<DefaultSpecializedInputProps, State> {\n  state: State = { formatError: false };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ formatError: false });\n    this.props.onChange(event.target.value);\n  };\n\n  format = () => {\n    const { value } = this.props;\n    try {\n      if (value) {\n        this.props.onChange(JSON.stringify(JSON.parse(value), undefined, JSON_SPACE_SIZE));\n      }\n    } catch (e) {\n      this.setState({ formatError: true });\n    }\n  };\n\n  render() {\n    const { formatError } = this.state;\n    return (\n      <div className=\"display-flex-end\">\n        <textarea\n          className=\"settings-large-input text-top monospaced spacer-right\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          rows={5}\n          value={this.props.value || ''}\n        />\n        <div>\n          {formatError && <Alert variant=\"info\">{translate('settings.json.format_error')} </Alert>}\n          <Button className=\"spacer-top\" onClick={this.format}>\n            {translate('settings.json.format')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { SettingCategoryDefinition } from '../../../../types/settings';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SettingType } from '../../../../types/settings';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForJSON from './InputForJSON';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  JSON: InputForJSON,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { sanitizeStringRestricted } from '../../../helpers/sanitize';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { Setting } from '../../../types/settings';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nconst SAFE_SET_STATE_DELAY = 3000;\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(\n        () => this.safeSetState({ success: false }),\n        SAFE_SET_STATE_DELAY\n      );\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(\n            () => this.safeSetState({ success: false }),\n            SAFE_SET_STATE_DELAY\n          );\n        },\n        () => {\n          /* Do nothing */\n        }\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              // eslint-disable-next-line react/no-danger\n              dangerouslySetInnerHTML={{ __html: sanitizeStringRestricted(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Setting } from '../../../types/settings';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success?: string;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: undefined, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: recipient, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    const { error, loading, message, recipient, subject, success } = this.state;\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters('email_configuration.test.email_was_sent_to_x', success)}\n              </Alert>\n            </div>\n          )}\n\n          {error !== undefined && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{error}</Alert>\n            </div>\n          )}\n\n          <MandatoryFieldsExplanation className=\"form-field\" />\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <MandatoryFieldMarker />\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <MandatoryFieldMarker />\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={message}\n            />\n          </div>\n\n          <SubmitButton disabled={loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { sanitizeStringRestricted } from '../../../helpers/sanitize';\nimport { Setting, SettingCategoryDefinition } from '../../../types/settings';\nimport { getSubCategoryDescription, getSubCategoryName } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<Setting & { definition: SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                // eslint-disable-next-line react/no-danger\n                dangerouslySetInnerHTML={{\n                  __html: sanitizeStringRestricted(subCategory.description)\n                }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeleteIcon from 'sonar-ui-common/components/icons/DeleteIcon';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS, IMPORT_COMPATIBLE_ALMS } from '../../../../helpers/constants';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport {\n  AlmBindingDefinitionBase,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface AlmBindingDefinitionBoxProps {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  definition: AlmBindingDefinitionBase;\n  multipleDefinitions: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  status?: AlmSettingsBindingStatus;\n}\n\nconst DEFAULT_STATUS: AlmSettingsBindingStatus = {\n  alertSuccess: false,\n  failureMessage: '',\n  type: AlmSettingsBindingStatusType.Validating\n};\n\nconst STATUS_ICON = {\n  [AlmSettingsBindingStatusType.Failure]: <AlertErrorIcon className=\"spacer-left\" />,\n  [AlmSettingsBindingStatusType.Success]: <AlertSuccessIcon className=\"spacer-left\" />\n};\n\nfunction getPRDecorationFeatureStatus(\n  branchesEnabled: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (branchesEnabled) {\n    return STATUS_ICON[type];\n  }\n\n  return (\n    <div className=\"display-inline-flex-center\">\n      <strong className=\"spacer-left\">\n        {translate('settings.almintegration.feature.pr_decoration.disabled')}\n      </strong>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={\n          <FormattedMessage\n            id=\"settings.almintegration.feature.pr_decoration.disabled.no_branches\"\n            defaultMessage={translate(\n              'settings.almintegration.feature.pr_decoration.disabled.no_branches'\n            )}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.developer), {\n                    sourceEdition: EditionKey.community\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate(\n                    'settings.almintegration.feature.pr_decoration.disabled.no_branches.link'\n                  )}\n                </a>\n              )\n            }}\n          />\n        }\n      />\n    </div>\n  );\n}\n\nfunction getImportFeatureStatus(\n  alm: AlmKeys,\n  definition: AlmBindingDefinitionBase,\n  multipleDefinitions: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (multipleDefinitions) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.multiple')}\n        />\n      </div>\n    );\n  }\n\n  if (!definition.url && alm !== AlmKeys.BitbucketCloud) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.no_url')}\n        />\n      </div>\n    );\n  }\n\n  return STATUS_ICON[type];\n}\n\nfunction getPrDecoFeatureDescription(alm: AlmKeys) {\n  switch (alm) {\n    case AlmKeys.GitLab:\n      return translate('settings.almintegration.feature.status_reporting.description_mr');\n    case AlmKeys.GitHub:\n      return translate(\n        'settings.almintegration.feature.status_reporting.description_pr_and_commits'\n      );\n    default:\n      return translate('settings.almintegration.feature.status_reporting.description_pr');\n  }\n}\n\nexport default function AlmBindingDefinitionBox(props: AlmBindingDefinitionBoxProps) {\n  const { alm, branchesEnabled, definition, multipleDefinitions, status = DEFAULT_STATUS } = props;\n\n  return (\n    <div className=\"boxed-group-inner bordered spacer-top spacer-bottom it__alm-binding-definition\">\n      <div className=\"actions pull-right\">\n        <Button onClick={() => props.onEdit(definition.key)}>\n          <EditIcon className=\"spacer-right\" />\n          {translate('edit')}\n        </Button>\n        <Button className=\"button-red spacer-left\" onClick={() => props.onDelete(definition.key)}>\n          <DeleteIcon className=\"spacer-right\" />\n          {translate('delete')}\n        </Button>\n      </div>\n\n      <div className=\"big-spacer-bottom\">\n        <h3>{definition.key}</h3>\n        {definition.url && <span>{definition.url}</span>}\n      </div>\n\n      {status.type === AlmSettingsBindingStatusType.Validating ? (\n        <>\n          <i className=\"spinner spacer-right\" />\n          {translate('settings.almintegration.checking_configuration')}\n        </>\n      ) : (\n        <>\n          {status.type !== AlmSettingsBindingStatusType.Warning && (\n            <div className=\"display-flex-row spacer-bottom\">\n              <div className=\"huge-spacer-right\">\n                <Tooltip overlay={getPrDecoFeatureDescription(alm)}>\n                  <span>{translate('settings.almintegration.feature.status_reporting.title')}</span>\n                </Tooltip>\n                {getPRDecorationFeatureStatus(branchesEnabled, status.type)}\n              </div>\n              {IMPORT_COMPATIBLE_ALMS.includes(alm) && (\n                <div>\n                  <Tooltip\n                    overlay={translate(\n                      'settings.almintegration.feature.alm_repo_import.description'\n                    )}>\n                    <span>\n                      {translate('settings.almintegration.feature.alm_repo_import.title')}\n                    </span>\n                  </Tooltip>\n                  {getImportFeatureStatus(alm, definition, multipleDefinitions, status.type)}\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"width-50\">\n            {status.type === AlmSettingsBindingStatusType.Warning && (\n              <Alert variant=\"warning\">\n                {translate('settings.almintegration.could_not_validate')}\n              </Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Failure && (\n              <Alert variant=\"error\">{status.failureMessage}</Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Success && status.alertSuccess && (\n              <>\n                <Alert variant=\"success\">\n                  {translate('settings.almintegration.configuration_valid')}\n                </Alert>\n                {alm === AlmKeys.GitHub && (\n                  <Alert variant=\"warning\">\n                    <FormattedMessage\n                      id=\"settings.almintegration.github.additional_permission\"\n                      defaultMessage={translate(\n                        'settings.almintegration.github.additional_permission'\n                      )}\n                      values={{\n                        link: (\n                          <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.GitHub]}>\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                  </Alert>\n                )}\n              </>\n            )}\n          </div>\n\n          <Button className=\"big-spacer-top\" onClick={() => props.onCheck(definition.key)}>\n            {translate('settings.almintegration.check_configuration')}\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport { AlmKeys } from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface CreationTooltipProps {\n  alm: AlmKeys;\n  appState: T.AppState;\n  children: React.ReactElement<{}>;\n  preventCreation: boolean;\n}\n\nexport function CreationTooltip(props: CreationTooltipProps) {\n  const {\n    alm,\n    appState: { edition },\n    children,\n    preventCreation\n  } = props;\n\n  const sourceEdition = edition ? EditionKey[edition] : undefined;\n\n  return (\n    <Tooltip\n      overlay={\n        preventCreation ? (\n          <FormattedMessage\n            id=\"settings.almintegration.create.tooltip\"\n            defaultMessage={translate('settings.almintegration.create.tooltip')}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.enterprise), {\n                    sourceEdition\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate('settings.almintegration.create.tooltip.link')}\n                </a>\n              ),\n              alm: translate('alm', alm)\n            }}\n          />\n        ) : null\n      }\n      mouseLeaveDelay={0.25}>\n      {children}\n    </Tooltip>\n  );\n}\n\nexport default withAppState(CreationTooltip);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmBindingDefinition,\n  AlmBindingDefinitionBase,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  isBitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmBindingDefinitionBox from './AlmBindingDefinitionBox';\nimport AlmBindingDefinitionForm from './AlmBindingDefinitionForm';\nimport { AlmTabs } from './AlmIntegration';\nimport CreationTooltip from './CreationTooltip';\n\nexport interface AlmTabRendererProps {\n  almTab: AlmTabs;\n  branchesEnabled: boolean;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  editDefinition?: boolean;\n  editedDefinition?: AlmBindingDefinition;\n  definitions: AlmBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  afterSubmit: (config: AlmBindingDefinitionBase) => void;\n}\n\nexport default function AlmTabRenderer(props: AlmTabRendererProps) {\n  const {\n    almTab,\n    branchesEnabled,\n    definitions,\n    definitionStatus,\n    editDefinition,\n    editedDefinition,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled\n  } = props;\n\n  const preventCreation = loadingProjectCount || (!multipleAlmEnabled && definitions.length > 0);\n\n  return (\n    <div className=\"bordered\">\n      <div className=\"big-padded\">\n        <DeferredSpinner loading={loadingAlmDefinitions}>\n          {definitions.length === 0 && (\n            <p className=\"spacer-top\">{translate('settings.almintegration.empty', almTab)}</p>\n          )}\n\n          <div className={definitions.length > 0 ? 'spacer-bottom text-right' : 'big-spacer-top'}>\n            <CreationTooltip alm={almTab} preventCreation={preventCreation}>\n              <Button\n                data-test=\"settings__alm-create\"\n                disabled={preventCreation}\n                onClick={props.onCreate}>\n                {translate('settings.almintegration.create')}\n              </Button>\n            </CreationTooltip>\n          </div>\n          {definitions.map(def => (\n            <AlmBindingDefinitionBox\n              alm={isBitbucketCloudBindingDefinition(def) ? AlmKeys.BitbucketCloud : almTab}\n              branchesEnabled={branchesEnabled}\n              definition={def}\n              key={def.key}\n              multipleDefinitions={definitions.length > 1}\n              onCheck={props.onCheck}\n              onDelete={props.onDelete}\n              onEdit={props.onEdit}\n              status={definitionStatus[def.key]}\n            />\n          ))}\n\n          {editDefinition && (\n            <AlmBindingDefinitionForm\n              alm={almTab}\n              bindingDefinition={editedDefinition}\n              alreadyHaveInstanceConfigured={definitions.length > 0}\n              onCancel={props.onCancel}\n              afterSubmit={props.afterSubmit}\n            />\n          )}\n        </DeferredSpinner>\n      </div>\n\n      <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList category={ALM_INTEGRATION} subCategory={almTab} />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  AlmBindingDefinition,\n  AlmBindingDefinitionBase,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport { AlmTabs } from './AlmIntegration';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props {\n  almTab: AlmTabs;\n  branchesEnabled: boolean;\n  definitions: AlmBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: AlmBindingDefinition;\n  editDefinition?: boolean;\n}\n\nexport default class AlmTab extends React.PureComponent<Props, State> {\n  state: State = {};\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({ editDefinition: false, editedDefinition: undefined });\n  };\n\n  handleCreate = () => {\n    this.setState({ editDefinition: true, editedDefinition: undefined });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editDefinition: true, editedDefinition });\n  };\n\n  handleAfterSubmit = (config: AlmBindingDefinitionBase) => {\n    if (this.mounted) {\n      this.setState({\n        editDefinition: false,\n        editedDefinition: undefined\n      });\n    }\n\n    this.props.onUpdateDefinitions();\n\n    this.props.onCheck(config.key);\n  };\n\n  render() {\n    const {\n      almTab,\n      branchesEnabled,\n      definitions,\n      definitionStatus,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled\n    } = this.props;\n    const { editDefinition, editedDefinition } = this.state;\n\n    return (\n      <AlmTabRenderer\n        almTab={almTab}\n        branchesEnabled={branchesEnabled}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editDefinition={editDefinition}\n        editedDefinition={editedDefinition}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={this.props.onCheck}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onCancel={this.handleCancel}\n        afterSubmit={this.handleAfterSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport { AlmTabs } from './AlmIntegration';\nimport AlmTab from './AlmTab';\nimport DeleteModal from './DeleteModal';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  currentAlmTab: AlmTabs;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancelDelete: () => void;\n  onCheckConfiguration: (definitionKey: string) => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlmTab: (alm: AlmTabs) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    )\n  },\n  {\n    key: AlmKeys.BitbucketServer,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket\n      </>\n    )\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps\n      </>\n    )\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    )\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    definitionKeyForDeletion,\n    definitions,\n    definitionStatus,\n    currentAlmTab,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  const bindingDefinitions = {\n    [AlmKeys.Azure]: definitions.azure,\n    [AlmKeys.GitLab]: definitions.gitlab,\n    [AlmKeys.GitHub]: definitions.github,\n    [AlmKeys.BitbucketServer]: [...definitions.bitbucket, ...definitions.bitbucketcloud]\n  };\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n\n      <BoxedTabs onSelect={props.onSelectAlmTab} selected={currentAlmTab} tabs={tabs} />\n\n      <AlmTab\n        almTab={currentAlmTab}\n        branchesEnabled={branchesEnabled}\n        definitions={bindingDefinitions[currentAlmTab]}\n        definitionStatus={definitionStatus}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheckConfiguration}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n      />\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancelDelete}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions,\n  validateAlmSettings\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { withRouter } from '../../../../components/hoc/withRouter';\nimport {\n  AlmBindingDefinitionBase,\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n}\n\nexport type AlmTabs = AlmKeys.Azure | AlmKeys.GitHub | AlmKeys.GitLab | AlmKeys.BitbucketServer;\n\ninterface State {\n  currentAlmTab: AlmTabs;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n\n    let currentAlmTab = props.location.query.alm || AlmKeys.GitHub;\n    if (currentAlmTab === AlmKeys.BitbucketCloud) {\n      currentAlmTab = AlmKeys.BitbucketServer;\n    }\n\n    this.state = {\n      currentAlmTab,\n      definitions: {\n        [AlmKeys.Azure]: [],\n        [AlmKeys.BitbucketServer]: [],\n        [AlmKeys.BitbucketCloud]: [],\n        [AlmKeys.GitHub]: [],\n        [AlmKeys.GitLab]: []\n      },\n      definitionStatus: {},\n      loadingAlmDefinitions: true,\n      loadingProjectCount: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    return this.fetchPullRequestDecorationSetting().then(definitions => {\n      if (definitions) {\n        // Validate all alms on load:\n        [\n          AlmKeys.Azure,\n          AlmKeys.BitbucketCloud,\n          AlmKeys.BitbucketServer,\n          AlmKeys.GitHub,\n          AlmKeys.GitLab\n        ].forEach(alm => {\n          this.state.definitions[alm].forEach((def: AlmBindingDefinitionBase) =>\n            this.handleCheck(def.key, false)\n          );\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleConfirmDelete = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    this.setState({ loadingAlmDefinitions: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loadingAlmDefinitions: false\n          });\n          return definitions;\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingAlmDefinitions: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlmTab: AlmTabs) => {\n    this.setState({ currentAlmTab });\n  };\n\n  handleCancelDelete = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loadingProjectCount: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loadingProjectCount: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingProjectCount: false });\n        }\n      });\n  };\n\n  handleCheck = async (definitionKey: string, alertSuccess = true) => {\n    this.setState(({ definitionStatus }) => {\n      definitionStatus[definitionKey] = {\n        ...definitionStatus[definitionKey],\n        type: AlmSettingsBindingStatusType.Validating\n      };\n\n      return { definitionStatus: { ...definitionStatus } };\n    });\n\n    let type: AlmSettingsBindingStatusType;\n    let failureMessage = '';\n\n    try {\n      failureMessage = await validateAlmSettings(definitionKey);\n      type = failureMessage\n        ? AlmSettingsBindingStatusType.Failure\n        : AlmSettingsBindingStatusType.Success;\n    } catch (_) {\n      type = AlmSettingsBindingStatusType.Warning;\n    }\n\n    if (this.mounted) {\n      this.setState(({ definitionStatus }) => {\n        definitionStatus[definitionKey] = {\n          alertSuccess,\n          failureMessage,\n          type\n        };\n\n        return { definitionStatus: { ...definitionStatus } };\n      });\n    }\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled }\n    } = this.props;\n    const {\n      currentAlmTab,\n      definitionKeyForDeletion,\n      definitions,\n      definitionStatus,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      projectCount\n    } = this.state;\n\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancelDelete={this.handleCancelDelete}\n        onConfirmDelete={this.handleConfirmDelete}\n        onCheckConfiguration={this.handleCheck}\n        onDelete={this.handleDelete}\n        onSelectAlmTab={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        currentAlmTab={currentAlmTab}\n        definitionKeyForDeletion={definitionKeyForDeletion}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        projectCount={projectCount}\n      />\n    );\n  }\n}\n\nexport default withRouter(withAppState(AlmIntegration));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nconst CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  'javascript / typescript': LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n\nexport default CATEGORY_OVERRIDES;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport { convertGithubApiUrlToLink, stripTrailingSlash } from '../../../../helpers/urls';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport InputForBoolean from '../inputs/InputForBoolean';\n\nexport interface AlmSpecificFormProps {\n  alm: AlmKeys;\n  instances: AlmSettingsInstance[];\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  monorepoEnabled: boolean;\n}\n\ninterface LabelProps {\n  id: string;\n  optional?: boolean;\n}\n\ninterface CommonFieldProps extends LabelProps {\n  help?: boolean;\n  helpParams?: T.Dict<string | JSX.Element>;\n  helpExample?: JSX.Element;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  propKey: keyof ProjectAlmBindingResponse;\n}\n\nfunction renderFieldWrapper(\n  label: React.ReactNode,\n  input: React.ReactNode,\n  help?: React.ReactNode\n) {\n  return (\n    <div className=\"settings-definition\">\n      <div className=\"settings-definition-left\">\n        {label}\n        {help && <div className=\"markdown small spacer-top\">{help}</div>}\n      </div>\n      <div className=\"settings-definition-right padded-top\">{input}</div>\n    </div>\n  );\n}\n\nfunction renderHelp({ help, helpExample, helpParams, id }: CommonFieldProps) {\n  return (\n    help && (\n      <>\n        <FormattedMessage\n          defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n          id={`settings.pr_decoration.binding.form.${id}.help`}\n          values={helpParams}\n        />\n        {helpExample && (\n          <div className=\"spacer-top nowrap\">\n            {translate('example')}: <em>{helpExample}</em>\n          </div>\n        )}\n      </>\n    )\n  );\n}\n\nfunction renderLabel(props: LabelProps) {\n  const { optional, id } = props;\n  return (\n    <label className=\"h3\" htmlFor={id}>\n      {translate('settings.pr_decoration.binding.form', id)}\n      {!optional && <MandatoryFieldMarker />}\n    </label>\n  );\n}\n\nfunction renderBooleanField(\n  props: Omit<CommonFieldProps, 'optional'> & {\n    value: boolean;\n    inputExtra?: React.ReactNode;\n  }\n) {\n  const { id, value, onFieldChange, propKey, inputExtra } = props;\n  return renderFieldWrapper(\n    renderLabel({ ...props, optional: true }),\n    <div className=\"display-flex-center big-spacer-top\">\n      <InputForBoolean\n        isDefault={true}\n        name={id}\n        onChange={v => onFieldChange(propKey, v)}\n        value={value}\n      />\n      {inputExtra}\n    </div>,\n    renderHelp(props)\n  );\n}\n\nfunction renderField(\n  props: CommonFieldProps & {\n    value: string;\n  }\n) {\n  const { id, propKey, value, onFieldChange } = props;\n  return renderFieldWrapper(\n    renderLabel(props),\n    <input\n      className=\"input-super-large big-spacer-top\"\n      id={id}\n      maxLength={256}\n      name={id}\n      onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n      type=\"text\"\n      value={value}\n    />,\n    renderHelp(props)\n  );\n}\n\nexport default function AlmSpecificForm(props: AlmSpecificFormProps) {\n  const {\n    alm,\n    instances,\n    formData: { repository, slug, summaryCommentEnabled, monorepo },\n    monorepoEnabled\n  } = props;\n\n  let formFields: JSX.Element;\n  const instance = instances.find(i => i.alm === alm);\n\n  switch (alm) {\n    case AlmKeys.Azure:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpExample: <strong>My Project</strong>,\n            id: 'azure.project',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n          {renderField({\n            help: true,\n            helpExample: <strong>My Repository</strong>,\n            id: 'azure.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.BitbucketServer:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpExample: (\n              <>\n                {instance?.url\n                  ? `${stripTrailingSlash(instance.url)}/projects/`\n                  : 'https://bb.company.com/projects/'}\n                <strong>{'MY_PROJECT_KEY'}</strong>\n                {'/repos/my-repository-slug/browse'}\n              </>\n            ),\n            id: 'bitbucket.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderField({\n            help: true,\n            helpExample: (\n              <>\n                {instance?.url\n                  ? `${stripTrailingSlash(instance.url)}/projects/MY_PROJECT_KEY/repos/`\n                  : 'https://bb.company.com/projects/MY_PROJECT_KEY/repos/'}\n                <strong>{'my-repository-slug'}</strong>\n                {'/browse'}\n              </>\n            ),\n            id: 'bitbucket.slug',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.BitbucketCloud:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpExample: (\n              <>\n                {'https://bitbucket.org/my-workspace/'}\n                <strong>{'my-repository-slug'}</strong>\n              </>\n            ),\n            id: 'bitbucketcloud.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.GitHub:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpExample: (\n              <>\n                {instance?.url\n                  ? `${stripTrailingSlash(convertGithubApiUrlToLink(instance.url))}/`\n                  : 'https://github.com/'}\n                <strong>{'sonarsource/sonarqube'}</strong>\n              </>\n            ),\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderBooleanField({\n            help: true,\n            id: 'github.summary_comment_setting',\n            onFieldChange: props.onFieldChange,\n            propKey: 'summaryCommentEnabled',\n            value: summaryCommentEnabled === undefined ? true : summaryCommentEnabled\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.GitLab:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpExample: <strong>123456</strong>,\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n  }\n\n  return (\n    <>\n      {formFields}\n      {monorepoEnabled &&\n        renderBooleanField({\n          help: true,\n          helpParams: {\n            doc_link: (\n              <Link to={ALM_DOCUMENTATION_PATHS[alm]} target=\"_blank\">\n                {translate('learn_more')}\n              </Link>\n            )\n          },\n          id: 'monorepo',\n          onFieldChange: props.onFieldChange,\n          propKey: 'monorepo',\n          value: monorepo,\n          inputExtra: monorepo && (\n            <Alert className=\"no-margin-bottom spacer-left\" variant=\"warning\" display=\"inline\">\n              {translate('settings.pr_decoration.binding.form.monorepo.warning')}\n            </Alert>\n          )\n        })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getGlobalSettingsUrl } from '../../../../helpers/urls';\nimport {\n  AlmSettingsInstance,\n  ProjectAlmBindingConfigurationErrors,\n  ProjectAlmBindingConfigurationErrorScope,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport AlmSpecificForm from './AlmSpecificForm';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  updating: boolean;\n  successfullyUpdated: boolean;\n  monorepoEnabled: boolean;\n  onCheckConfiguration: () => void;\n  checkingConfiguration: boolean;\n  configurationErrors?: ProjectAlmBindingConfigurationErrors;\n  isSysAdmin: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData,\n    instances,\n    isChanged,\n    isConfigured,\n    isValid,\n    loading,\n    updating,\n    successfullyUpdated,\n    monorepoEnabled,\n    checkingConfiguration,\n    configurationErrors,\n    isSysAdmin\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          {isSysAdmin ? (\n            <FormattedMessage\n              defaultMessage={translate('settings.pr_decoration.binding.no_bindings.admin')}\n              id=\"settings.pr_decoration.binding.no_bindings.admin\"\n              values={{\n                link: (\n                  <Link to={getGlobalSettingsUrl(ALM_INTEGRATION)}>\n                    {translate('settings.pr_decoration.binding.no_bindings.link')}\n                  </Link>\n                )\n              }}\n            />\n          ) : (\n            translate('settings.pr_decoration.binding.no_bindings')\n          )}\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = formData.key && instances.find(i => i.key === formData.key);\n  const alm = selected && selected.alm;\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <MandatoryFieldsExplanation className=\"form-field\" />\n\n        <div className=\"settings-definition big-spacer-bottom\">\n          <div className=\"settings-definition-left\">\n            <label className=\"h3\" htmlFor=\"name\">\n              {translate('settings.pr_decoration.binding.form.name')}\n              <MandatoryFieldMarker className=\"spacer-right\" />\n            </label>\n            <div className=\"markdown small spacer-top\">\n              {translate('settings.pr_decoration.binding.form.name.help')}\n            </div>\n          </div>\n          <div className=\"settings-definition-right\">\n            <Select\n              autosize={true}\n              className=\"abs-width-400 big-spacer-top\"\n              clearable={false}\n              id=\"name\"\n              menuContainerStyle={{\n                maxWidth: '210%' /* Allow double the width of the select */,\n                width: 'auto'\n              }}\n              onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n              optionRenderer={optionRenderer}\n              options={instances}\n              searchable={false}\n              value={formData.key}\n              valueKey=\"key\"\n              valueRenderer={optionRenderer}\n            />\n          </div>\n        </div>\n\n        {alm && (\n          <AlmSpecificForm\n            alm={alm}\n            instances={instances}\n            formData={formData}\n            onFieldChange={props.onFieldChange}\n            monorepoEnabled={monorepoEnabled}\n          />\n        )}\n\n        <div className=\"display-flex-center big-spacer-top action-section\">\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={updating || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n              <DeferredSpinner className=\"spacer-left\" loading={updating} />\n            </SubmitButton>\n          )}\n          {!updating && successfullyUpdated && (\n            <span className=\"text-success spacer-right\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n          {isConfigured && (\n            <>\n              <Button className=\"spacer-right\" onClick={props.onReset}>\n                <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n              </Button>\n              {!isChanged && (\n                <Button onClick={props.onCheckConfiguration} disabled={checkingConfiguration}>\n                  {translate('settings.pr_decoration.binding.check_configuration')}\n                  <DeferredSpinner className=\"spacer-left\" loading={checkingConfiguration} />\n                </Button>\n              )}\n            </>\n          )}\n        </div>\n        {!checkingConfiguration && configurationErrors?.errors && (\n          <Alert variant=\"error\" display=\"inline\" className=\"big-spacer-top\">\n            <p className=\"spacer-bottom\">\n              {translate('settings.pr_decoration.binding.check_configuration.failure')}\n            </p>\n            <ul className=\"list-styled\">\n              {configurationErrors.errors.map((error, i) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <li key={i}>{error.msg}</li>\n              ))}\n            </ul>\n            {configurationErrors.scope === ProjectAlmBindingConfigurationErrorScope.Global && (\n              <p>\n                {isSysAdmin ? (\n                  <FormattedMessage\n                    id=\"settings.pr_decoration.binding.check_configuration.failure.check_global_settings\"\n                    defaultMessage={translate(\n                      'settings.pr_decoration.binding.check_configuration.failure.check_global_settings'\n                    )}\n                    values={{\n                      link: (\n                        <Link to={getGlobalSettingsUrl(ALM_INTEGRATION, { alm })}>\n                          {translate(\n                            'settings.pr_decoration.binding.check_configuration.failure.check_global_settings.link'\n                          )}\n                        </Link>\n                      )\n                    }}\n                  />\n                ) : (\n                  translate('settings.pr_decoration.binding.check_configuration.contact_admin')\n                )}\n              </p>\n            )}\n          </Alert>\n        )}\n        {isConfigured && !isChanged && !checkingConfiguration && !configurationErrors && (\n          <Alert variant=\"success\" display=\"inline\" className=\"big-spacer-top\">\n            {translate('settings.pr_decoration.binding.check_configuration.success')}\n          </Alert>\n        )}\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { HttpStatus } from 'sonar-ui-common/helpers/request';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectBitbucketCloudBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding,\n  validateProjectAlmBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { withCurrentUser } from '../../../../components/hoc/withCurrentUser';\nimport { hasGlobalPermission } from '../../../../helpers/users';\nimport { getAppState, Store } from '../../../../store/rootReducer';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingConfigurationErrors,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\nimport { Permissions } from '../../../../types/permissions';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ntype FormData = T.Omit<ProjectAlmBindingResponse, 'alm'>;\n\ninterface StateProps {\n  monorepoEnabled: boolean;\n}\n\ninterface Props {\n  component: T.Component;\n  currentUser: T.CurrentUser;\n}\n\ninterface State {\n  formData: FormData;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  originalData?: FormData;\n  updating: boolean;\n  successfullyUpdated: boolean;\n  checkingConfiguration: boolean;\n  configurationErrors?: ProjectAlmBindingConfigurationErrors;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<FormData, 'key'>>;\n} = {\n  [AlmKeys.Azure]: ['repository', 'slug'],\n  [AlmKeys.BitbucketServer]: ['repository', 'slug'],\n  [AlmKeys.BitbucketCloud]: ['repository'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: ['repository']\n};\n\nexport class PRDecorationBinding extends React.PureComponent<Props & StateProps, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '', monorepo: false },\n    instances: [],\n    isChanged: false,\n    isConfigured: false,\n    isValid: false,\n    loading: true,\n    updating: false,\n    successfullyUpdated: false,\n    checkingConfiguration: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isChanged: false,\n              isConfigured: !!originalData,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              originalData: newFormData,\n              configurationErrors: undefined\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      })\n      .then(() => this.checkConfiguration());\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBindingResponse | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === HttpStatus.NotFound) {\n        return undefined;\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ updating: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ updating: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: '',\n              monorepo: false\n            },\n            originalData: undefined,\n            isChanged: false,\n            isConfigured: false,\n            updating: false,\n            successfullyUpdated: true,\n            configurationErrors: undefined\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<FormData, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n    const repository = almSpecificFields?.repository;\n    const slug = almSpecificFields?.slug;\n    const monorepo = almSpecificFields?.monorepo ?? false;\n\n    if (!repository) {\n      return Promise.reject();\n    }\n\n    switch (alm) {\n      case AlmKeys.Azure: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectAzureBinding({\n          almSetting,\n          project,\n          projectName: slug,\n          repositoryName: repository,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketServer: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketCloud: {\n        return setProjectBitbucketCloudBinding({\n          almSetting,\n          project,\n          repository,\n          monorepo\n        });\n      }\n      case AlmKeys.GitHub: {\n        // By default it must remain true.\n        const summaryCommentEnabled = almSpecificFields?.summaryCommentEnabled ?? true;\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository,\n          summaryCommentEnabled,\n          monorepo\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository,\n          monorepo\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  checkConfiguration = async () => {\n    const {\n      component: { key: projectKey }\n    } = this.props;\n\n    const { isConfigured } = this.state;\n\n    if (!isConfigured) {\n      return;\n    }\n\n    this.setState({ checkingConfiguration: true, configurationErrors: undefined });\n\n    const configurationErrors = await validateProjectAlmBinding(projectKey).catch(error => error);\n\n    if (this.mounted) {\n      this.setState({ checkingConfiguration: false, configurationErrors });\n    }\n  };\n\n  handleSubmit = () => {\n    this.setState({ updating: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            updating: false,\n            successfullyUpdated: true\n          });\n        }\n      })\n      .then(this.fetchDefinitions)\n      .catch(this.catchError);\n  };\n\n  isDataSame(\n    { key, repository = '', slug = '', summaryCommentEnabled = false, monorepo = false }: FormData,\n    {\n      key: oKey = '',\n      repository: oRepository = '',\n      slug: oSlug = '',\n      summaryCommentEnabled: osummaryCommentEnabled = false,\n      monorepo: omonorepo = false\n    }: FormData\n  ) {\n    return (\n      key === oKey &&\n      repository === oRepository &&\n      slug === oSlug &&\n      summaryCommentEnabled === osummaryCommentEnabled &&\n      monorepo === omonorepo\n    );\n  }\n\n  handleFieldChange = (id: keyof ProjectAlmBindingResponse, value: string | boolean) => {\n    this.setState(({ formData, originalData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        isChanged: !this.isDataSame(newFormData, originalData || { key: '', monorepo: false }),\n        successfullyUpdated: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  handleCheckConfiguration = async () => {\n    await this.checkConfiguration();\n  };\n\n  render() {\n    const { currentUser, monorepoEnabled } = this.props;\n\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        onCheckConfiguration={this.handleCheckConfiguration}\n        monorepoEnabled={monorepoEnabled}\n        isSysAdmin={hasGlobalPermission(currentUser, Permissions.Admin)}\n        {...this.state}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  // This feature trigger will be replaced when SONAR-14349 is implemented\n  monorepoEnabled: [EditionKey.enterprise, EditionKey.datacenter].includes(\n    getAppState(state).edition as EditionKey\n  )\n});\n\nexport default connect(mapStateToProps)(withCurrentUser(PRDecorationBinding));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getGlobalSettingsUrl, getProjectSettingsUrl } from '../../../helpers/urls';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport function CategoriesList(props: CategoriesListProps) {\n  const { branchesEnabled, categories, component, defaultCategory, selectedCategory } = props;\n\n  const categoriesWithName = categories\n    .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n    .map(key => ({\n      key,\n      name: getCategoryName(key)\n    }))\n    .concat(\n      ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n        .filter(c =>\n          component\n            ? // Project settings\n              c.availableForProject\n            : // Global settings\n              c.availableGlobally\n        )\n        .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n    );\n  const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n\n  return (\n    <ul className=\"side-tabs-menu\">\n      {sortedCategories.map(c => {\n        const category = c.key !== defaultCategory ? c.key.toLowerCase() : undefined;\n        return (\n          <li key={c.key}>\n            <IndexLink\n              className={classNames({\n                active: c.key.toLowerCase() === selectedCategory.toLowerCase()\n              })}\n              title={c.name}\n              to={\n                component\n                  ? getProjectSettingsUrl(component.key, category)\n                  : getGlobalSettingsUrl(category)\n              }>\n              {c.name}\n            </IndexLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\nexport interface PageHeaderProps {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: PageHeaderProps) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"top-bar-outer\">\n      <div className=\"top-bar\">\n        <div className=\"top-bar-inner bordered-bottom big-padded-top padded-bottom\">\n          <h1 className=\"page-title\">{title}</h1>\n          <div className=\"page-description spacer-top\">{description}</div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addSideBarClass,\n  addWhitePageClass,\n  removeSideBarClass,\n  removeWhitePageClass\n} from 'sonar-ui-common/helpers/pages';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    addSideBarClass();\n    addWhitePageClass();\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeSideBarClass();\n    removeWhitePageClass();\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n        <PageHeader component={this.props.component} />\n\n        <div className=\"layout-page\">\n          <ScreenPositionHelper className=\"layout-page-side-outer\">\n            {({ top }) => (\n              <div className=\"layout-page-side\" style={{ top }}>\n                <div className=\"layout-page-side-inner\">\n                  <AllCategoriesList\n                    component={this.props.component}\n                    defaultCategory={this.props.defaultCategory}\n                    selectedCategory={selectedCategory}\n                  />\n                </div>\n              </div>\n            )}\n          </ScreenPositionHelper>\n\n          <div className=\"layout-page-main\">\n            <div className=\"layout-page-main-inner\">\n              <div className=\"big-padded\">\n                {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n                  foundAdditionalCategory.renderComponent({\n                    component: this.props.component,\n                    selectedCategory: originalCategory\n                  })\n                ) : (\n                  <CategoryDefinitionsList\n                    category={selectedCategory}\n                    component={this.props.component}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { sanitize } from 'dompurify';\n\nexport function sanitizeStringRestricted(html: string) {\n  return sanitize(html, {\n    ALLOWED_TAGS: ['b', 'br', 'code', 'i', 'li', 'p', 'strong', 'ul', 'a'],\n    ALLOWED_ATTR: ['target', 'href']\n  });\n}\n\nexport function sanitizeString(html: string) {\n  return sanitize(html, { USE_PROFILES: { html: true } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\n\ninterface Props {\n  className?: string;\n  children: (position: { top: number; left: number }) => React.ReactElement<any>;\n}\n\nexport default class ScreenPositionHelper extends React.PureComponent<Props> {\n  container?: HTMLDivElement;\n  debouncedOnResize: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedOnResize = debounce(() => this.forceUpdate(), 250);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    window.addEventListener('resize', this.debouncedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedOnResize);\n  }\n\n  getPosition = () => {\n    const containerPos = this.container && this.container.getBoundingClientRect();\n    if (!containerPos) {\n      return { top: 0, left: 0 };\n    }\n    return {\n      top: window.pageYOffset + containerPos.top,\n      left: window.pageXOffset + containerPos.left\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={container => (this.container = container as HTMLDivElement)}>\n        {this.props.children(this.getPosition())}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\nimport { SettingCategoryDefinition, SettingDefinition, SettingValue } from '../types/settings';\n\nexport function getDefinitions(component?: string): Promise<SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  referenceBranch,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  referenceBranch?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'REFERENCE_BRANCH':\n      return referenceBranch;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  overrideGeneralSetting?: boolean;\n  referenceBranch?: string;\n  selected?: T.NewCodePeriodSettingType;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    overrideGeneralSetting,\n    referenceBranch = '',\n    selected\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue) ||\n      (selected === 'REFERENCE_BRANCH' && referenceBranch !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days)) ||\n    (selected === 'REFERENCE_BRANCH' && referenceBranch.length > 0);\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <>\n            <MandatoryFieldsExplanation />\n\n            <ValidationInput\n              error={undefined}\n              id=\"baseline_number_of_days\"\n              isInvalid={isChanged && !isValid}\n              isValid={isChanged && isValid}\n              label={translate('baseline.specify_days')}\n              required={true}>\n              <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n            </ValidationInput>\n          </>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n"],"sourceRoot":""}