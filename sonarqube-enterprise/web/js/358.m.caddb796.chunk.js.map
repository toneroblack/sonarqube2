{"version":3,"sources":["webpack:///./src/main/js/apps/projects/components/DefaultPageSelector.tsx","webpack:///./src/main/js/apps/projects/components/AllProjectsContainer.tsx"],"names":["DefaultPageSelector","state","checking","checkIfNeedsRedirecting","async","currentUser","router","location","this","props","setting","Object","keys","query","length","setState","filter","ps","paging","total","replace","isFavorite","qualifiers"],"mappings":"6FAAA,oIAsCO,MAAMA,UAA4B,gBAAzC,c,oBACE,KAAAC,MAAe,CAAEC,UAAU,GAM3B,KAAAC,wBAA0BC,UACxB,MAAM,YAAEC,EAAF,OAAeC,EAAf,SAAuBC,GAAaC,KAAKC,MACzCC,EAAU,cAAI,MAOjB,YAAWL,IACZM,OAAOC,KAAKL,EAASM,OAAOC,OAAS,GACrCJ,IAAY,IAEZF,KAAKO,SAAS,CAAEb,UAAU,IAQ1BQ,IAAY,YACL,YAAe,CAAEM,OAAQ,aAAcC,GAAI,KAAMC,OAAOC,MAAQ,EAEvEb,EAAOc,QAAQ,uBAOf,YAAoBf,EAAa,iBACkB,WAA5C,YAAe,CAAEY,GAAI,KAAMC,OAAOC,OAEzCX,KAAKC,MAAMH,OAAOc,QAAQ,oBAI5BZ,KAAKO,SAAS,CAAEb,UAAU,MA1C5B,oBACEM,KAAKL,0BA4CP,SACE,MAAM,SAAED,GAAaM,KAAKP,MAE1B,OAAIC,EAGK,KAGF,gBAAC,IAAoB,CAACmB,YAAY,KAI9B,sBAAgB,YAAWrB,K,iCCnG1C,+BA6Be,gBALOC,IAAD,CACnBI,YAAa,yBAAeJ,GAC5BqB,WAAY,sBAAYrB,GAAOqB,aAGlB,CAAsB,4BAAkB,IAAM","file":"js/358.m.caddb796.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { get } from 'sonar-ui-common/helpers/storage';\nimport { searchProjects } from '../../../api/components';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { hasGlobalPermission, isLoggedIn } from '../../../helpers/users';\nimport { PROJECTS_ALL, PROJECTS_DEFAULT_FILTER, PROJECTS_FAVORITE } from '../utils';\nimport AllProjectsContainer from './AllProjectsContainer';\n\ninterface Props {\n  currentUser: T.CurrentUser;\n  location: Pick<Location, 'pathname' | 'query'>;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  checking: boolean;\n}\n\nexport class DefaultPageSelector extends React.PureComponent<Props, State> {\n  state: State = { checking: true };\n\n  componentDidMount() {\n    this.checkIfNeedsRedirecting();\n  }\n\n  checkIfNeedsRedirecting = async () => {\n    const { currentUser, router, location } = this.props;\n    const setting = get(PROJECTS_DEFAULT_FILTER);\n\n    // 1. Don't have to redirect if:\n    //   1.1 User is anonymous\n    //   1.2 There's a query, which means the user is interacting with the current page\n    //   1.3 The last interaction with the filter was to set it to \"all\"\n    if (\n      !isLoggedIn(currentUser) ||\n      Object.keys(location.query).length > 0 ||\n      setting === PROJECTS_ALL\n    ) {\n      this.setState({ checking: false });\n      return;\n    }\n\n    // 2. Redirect to the favorites page if:\n    //   2.1 The last interaction with the filter was to set it to \"favorites\"\n    //   2.2 The user has starred some projects\n    if (\n      setting === PROJECTS_FAVORITE ||\n      (await searchProjects({ filter: 'isFavorite', ps: 1 })).paging.total > 0\n    ) {\n      router.replace('/projects/favorite');\n      return;\n    }\n\n    // 3. Redirect to the create project page if:\n    //   3.1 The user has permission to provision projects, AND there are 0 projects on the instance\n    if (\n      hasGlobalPermission(currentUser, 'provisioning') &&\n      (await searchProjects({ ps: 1 })).paging.total === 0\n    ) {\n      this.props.router.replace('/projects/create');\n    }\n\n    // None of the above apply. Do not redirect, and stay on this page.\n    this.setState({ checking: false });\n  };\n\n  render() {\n    const { checking } = this.state;\n\n    if (checking) {\n      // We don't return a loader here, on purpose. We don't want to show anything\n      // just yet.\n      return null;\n    }\n\n    return <AllProjectsContainer isFavorite={false} />;\n  }\n}\n\nexport default withCurrentUser(withRouter(DefaultPageSelector));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { getAppState, getCurrentUser, Store } from '../../../store/rootReducer';\nimport { ComponentQualifier } from '../../../types/component';\n\nconst stateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  qualifiers: getAppState(state).qualifiers as ComponentQualifier[]\n});\n\nexport default connect(stateToProps)(lazyLoadComponent(() => import('./AllProjects')));\n"],"sourceRoot":""}